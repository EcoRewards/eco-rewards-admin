{"version":3,"sources":["LoginPage/LoginPage.tsx","AuthenticatedPage/DashboardPage/DashboardPage.tsx","AuthenticatedPage/SideNavigation/SideNavigation.tsx","AuthenticatedPage/TopBar/TopBar.tsx","AuthenticatedPage/Footer/Footer.tsx","AuthenticatedPage/SchemesPage/SchemesPage.tsx","AuthenticatedPage/AuthenticatedPage.tsx","PrivateRoute/PrivateRoute.tsx","Authentication.ts","serviceWorker.ts","index.tsx","App.tsx"],"names":["LoginPage","auth","history","useHistory","from","useLocation","state","pathname","useState","loginError","setLoginError","username","setUsername","password","setPassword","login","e","a","preventDefault","isAuthenticated","replace","className","type","id","aria-describedby","placeholder","onChange","target","value","htmlFor","onClick","DashboardPage","rel","href","SideNavigation","to","TopBar","logout","role","data-toggle","aria-haspopup","aria-expanded","Footer","SchemesPage","AuthenticatedPage","path","PrivateRoute","children","rest","render","location","Authentication","api","cookie","setCookie","removeCookie","useCookies","this","post","response","data","console","error","undefined","token","Boolean","window","hostname","match","ReactDOM","Axios","create","baseURL","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83187b97.chunk.js","sourcesContent":["import React, { FormEvent, useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { Authentication } from \"../Authentication\";\nimport {\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nexport const LoginPage = ({ auth }: LoginPageProps) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: \"/\" } };\n  const [loginError, setLoginError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const login = async (e: FormEvent) => {\n    e.preventDefault();\n\n    await auth.login(username, password);\n\n    if (auth.isAuthenticated) {\n      history.replace(from);\n    }\n    else {\n      setLoginError(\"Unable to login, please try again.\");\n    }\n  };\n\n  if (auth.isAuthenticated) {\n    history.replace(from);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Login</h1>\n                    </div>\n                    <form className=\"user\">\n                      <div className=\"form-group\">\n                        <input type=\"email\" className=\"form-control form-control-user\" id=\"exampleInputEmail\"\n                               aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\"\n                               onChange={e => setUsername(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <input type=\"password\" className=\"form-control form-control-user\" id=\"exampleInputPassword\"\n                               placeholder=\"Password\" onChange={e => setPassword(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox small\">\n                          <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck\"/>\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck\">Remember Me</label>\n                        </div>\n                      </div>\n                      <button className=\"btn btn-primary btn-user btn-block\" onClick={login}>\n                        Login\n                      </button>\n                    </form>\n                    { loginError && (<hr />) }\n                    {loginError}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface LoginPageProps {\n  auth: Authentication\n}\n","import React from \"react\";\n\nexport const DashboardPage: React.FC = () => {\n  return (\n    <div className=\"container-fluid\">\n\n      <h1 className=\"h3 mb-2 text-gray-800\">Tables</h1>\n      <p className=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more\n        information about DataTables, please visit the <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://datatables.net\">official\n          DataTables documentation</a>.\n      </p>\n\n      <div className=\"card shadow mb-4\">\n        <div className=\"card-header py-3\">\n          <h6 className=\"m-0 font-weight-bold text-primary\">DataTables Example</h6>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-bordered\" id=\"dataTable\">\n              <thead>\n              <tr>\n                <th>Name</th>\n                <th>Position</th>\n                <th>Office</th>\n                <th>Age</th>\n                <th>Start date</th>\n                <th>Salary</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td>Tiger Nixon</td>\n                <td>System Architect</td>\n                <td>Edinburgh</td>\n                <td>61</td>\n                <td>2011/04/25</td>\n                <td>$320,800</td>\n              </tr>\n              <tr>\n                <td>Garrett Winters</td>\n                <td>Accountant</td>\n                <td>Tokyo</td>\n                <td>63</td>\n                <td>2011/07/25</td>\n                <td>$170,750</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport \"./SideNavigation.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const SideNavigation = () => {\n  return (\n    <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n      <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"index.html\">\n        <div className=\"sidebar-brand-icon rotate-n-15\">\n          <i className=\"fas fa-leaf\"></i>\n        </div>\n        <div className=\"sidebar-brand-text mx-3\">Eco Rewards Hub Admin</div>\n      </a>\n\n      <hr className=\"sidebar-divider my-0\"/>\n\n      <li className=\"nav-item\">\n        <Link className=\"nav-link\" to=\"/\">\n          <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n          <span>Dashboard</span></Link>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Manage\n      </div>\n\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"/schemes\">\n          <i className=\"fas fa-fw fa-folder\"></i>\n          <span>Schemes</span></a>\n      </li>\n\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"charts.html\">\n          <i className=\"fas fa-fw fa-chart-area\"></i>\n          <span>Organisations</span></a>\n      </li>\n\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"charts.html\">\n          <i className=\"fas fa-fw fa-chart-area\"></i>\n          <span>Groups</span></a>\n      </li>\n\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"charts.html\">\n          <i className=\"fas fa-fw fa-chart-area\"></i>\n          <span>Members</span></a>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Reports\n      </div>\n\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"tables.html\">\n          <i className=\"fas fa-fw fa-table\"></i>\n          <span>Journeys</span></a>\n      </li>\n\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Authentication } from \"../../Authentication\";\n\nexport const TopBar = ({ auth }: TopBarProps) => {\n\n  const logout = (e: any) => {\n    e.preventDefault();\n\n    auth.logout();\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n      <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\n        <i className=\"fa fa-bars\"></i>\n      </button>\n\n      <ul className=\"navbar-nav ml-auto\">\n\n        <li className=\"nav-item dropdown no-arrow\">\n          <a className=\"dropdown-toggle\" href=\"/logout\" onClick={logout} id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Logout</span>\n            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          </a>\n        </li>\n\n      </ul>\n\n    </nav>\n\n  );\n};\n\ninterface TopBarProps {\n  auth: Authentication;\n}\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"sticky-footer bg-white\">\n    <div className=\"container my-auto\">\n      <div className=\"copyright text-center my-auto\">\n        <span>Copyright &copy; Eco Rewards</span>\n      </div>\n    </div>\n  </footer>\n  );\n};\n","import React from \"react\";\n\nexport const SchemesPage: React.FC = () => {\n  return (\n    <div className=\"container-fluid\">\n\n      <h1 className=\"h3 mb-2 text-gray-800\">Schemes</h1>\n      <p className=\"mb-4\">DataTables is a third party plugin that is used to generate the demo table below. For more\n        information about DataTables, please visit the <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://datatables.net\">official\n          DataTables documentation</a>.\n      </p>\n\n      <div className=\"card shadow mb-4\">\n        <div className=\"card-header py-3\">\n          <h6 className=\"m-0 font-weight-bold text-primary\">DataTables Example</h6>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-bordered\" id=\"dataTable\">\n              <thead>\n              <tr>\n                <th>ID</th>\n                <th>Name</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td>Tiger Nixon</td>\n                <td>System Architect</td>\n              </tr>\n              <tr>\n                <td>Garrett Winters</td>\n                <td>Accountant</td>\n              </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { DashboardPage } from './DashboardPage/DashboardPage';\nimport { SideNavigation } from \"./SideNavigation/SideNavigation\";\nimport { TopBar } from \"./TopBar/TopBar\";\nimport { Footer } from \"./Footer/Footer\";\nimport { Authentication } from \"../Authentication\";\nimport { SchemesPage } from \"./SchemesPage/SchemesPage\";\n\nexport const AuthenticatedPage = ({ auth }: AuthenticatedPageProps) => {\n  return (\n    <div id=\"wrapper\">\n      <SideNavigation/>\n      <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n        <div id=\"content\">\n          <TopBar auth={auth}/>\n          <Router>\n            <Switch>\n              <Route path=\"/schemes\">\n                <SchemesPage />\n              </Route>\n              <Route path=\"/\">\n                <DashboardPage />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n        <Footer/>\n      </div>\n    </div>\n  );\n};\n\ninterface AuthenticatedPageProps {\n  auth: Authentication;\n}\n","import { Redirect, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nexport const PrivateRoute = ({ children, auth, ...rest }: any) => {\n  return (\n    <Route\n      {...rest}\n      render={ ({ location }) =>\n        auth.isAuthenticated ? children : <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n      }\n    />\n  );\n};\n","import { useCookies } from \"react-cookie\";\nimport { AxiosInstance } from \"axios\";\n\nexport class Authentication {\n  private cookie: AuthenticationCookie;\n  private readonly setCookie: (name: string, value: any) => void;\n  private readonly removeCookie: (name: string) => void;\n\n  constructor(\n    private readonly api: AxiosInstance\n  ) {\n    const [cookie, setCookie, removeCookie] = useCookies([\"auth\"]);\n\n    this.cookie = cookie.auth;\n    this.setCookie = setCookie;\n    this.removeCookie = removeCookie;\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.cookie && this.cookie.token !== undefined;\n  }\n\n  public async login(username: string, password: string): Promise<void> {\n    try {\n      const response = await this.api.post(\"/login\", { username, password });\n\n      this.setCookie(\"auth\", response.data.data);\n    }\n    catch (e) {\n      console.error(e);\n    }\n  }\n\n  public logout(): void {\n    this.removeCookie(\"auth\");\n  }\n\n}\n\ninterface AuthenticationCookie {\n  token?: string\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"startbootstrap-sb-admin-2/css/sb-admin-2.min.css\"\nimport \"startbootstrap-sb-admin-2/vendor/fontawesome-free/css/all.min.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from \"./LoginPage/LoginPage\";\nimport { AuthenticatedPage } from './AuthenticatedPage/AuthenticatedPage';\nimport { PrivateRoute } from './PrivateRoute/PrivateRoute';\nimport { Authentication } from \"./Authentication\";\nimport Axios from 'axios';\n\nexport const App = () => {\n  const auth = new Authentication(Axios.create({\n    baseURL: \"https://api.ecorewards.co.uk\"\n  }));\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage auth={auth}/>\n        </Route>\n        <PrivateRoute auth={auth} path=\"/\">\n          <AuthenticatedPage auth={auth}/>\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n};\n\n"],"sourceRoot":""}
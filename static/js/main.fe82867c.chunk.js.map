{"version":3,"sources":["LoginPage/LoginPage.tsx","AuthenticatedPage/DashboardPage/DashboardPage.tsx","AuthenticatedPage/SideNavigation/SideNavigation.tsx","AuthenticatedPage/TopBar/TopBar.tsx","AuthenticatedPage/Footer/Footer.tsx","AuthenticatedPage/SchemesPage/CreateSchemeForm/CreateSchemeForm.tsx","AuthenticatedPage/Table/Table.tsx","AuthenticatedPage/SchemesPage/SchemesTable/SchemesTable.tsx","AuthenticatedPage/SchemesPage/SchemesPage.tsx","AuthenticatedPage/OrganisationsPage/CreateOrganisationForm/CreateOrganisationForm.tsx","AuthenticatedPage/OrganisationsPage/OrganisationsTable/OrganisationsTable.tsx","AuthenticatedPage/OrganisationsPage/OrganisationsPage.tsx","AuthenticatedPage/GroupsPage/CreateGroupForm/CreateGroupForm.tsx","AuthenticatedPage/GroupsPage/GroupsTable/GroupsTable.tsx","AuthenticatedPage/GroupsPage/GroupsPage.tsx","TransportModeList/TransportModeList.tsx","AuthenticatedPage/MembersPage/CreateMemberForm/CreateMemberForm.tsx","AuthenticatedPage/MembersPage/MembersTable/MembersTable.tsx","AuthenticatedPage/MembersPage/MembersPage.tsx","AuthenticatedPage/JourneysPage/CreateJourneyForm/CreateJourneyForm.tsx","AuthenticatedPage/JourneysPage/JourneysTable/JourneysTable.tsx","AuthenticatedPage/JourneysPage/JourneysPage.tsx","AuthenticatedPage/AuthenticatedPage.tsx","PrivateRoute/PrivateRoute.tsx","Authentication.ts","RegistrationPage/RegistrationPage.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["LoginPage","auth","history","useHistory","from","useLocation","state","pathname","useState","loginError","setLoginError","username","setUsername","password","setPassword","rememberMe","setRememberMe","login","e","a","preventDefault","isAuthenticated","replace","className","type","id","aria-describedby","placeholder","onChange","target","value","checked","htmlFor","onClick","DashboardPage","SideNavigation","to","exact","activeClassName","TopBar","getName","href","logout","role","data-toggle","aria-haspopup","aria-expanded","Footer","CreateSchemeForm","api","addScheme","name","setName","message","setMessage","onSubmit","post","response","data","style","maxWidth","width","disabled","length","Table","rows","columns","removeRows","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","handleRowSelected","useCallback","contextActions","useMemo","handleDelete","window","confirm","map","r","Promise","all","delete","key","filterText","setFilterText","resetPaginationToggle","filteredItems","filter","item","includes","subHeaderComponentMemo","onFilter","pagination","paginationResetDefaultPage","paginationPerPage","subHeader","subHeaderComponent","selectableRows","undefined","onSelectedRowsChange","clearSelectedRows","FilterComponent","onClear","TextField","styled","input","SchemesTable","schemes","removeSchemes","s","numeric_id","toSchemeId","selector","sortable","SchemesPage","setSchemes","links","setLinks","useEffect","get","fetchSchemes","push","removed","s1","some","s2","CreateOrganisationForm","addOrganisation","scheme","setScheme","SchemeOption","OrganisationsTable","organisations","removeOrganisations","o","toOrganisationId","OrganisationsPage","apiData","setApiData","then","fetchApiData","r1","r2","CreateGroupForm","addGroup","organisation","setOrganisation","OrganisationOption","GroupsTable","groups","removeGroups","toGroupId","GroupsPage","TransportModeList","defaultTransportMode","setDefaultTransportMode","defaultValue","m","i","toLowerCase","CreateMemberForm","addMembers","group","setGroup","defaultDistance","setDefaultDistance","quantity","setQuantity","canSubmit","MembersTable","members","removeMembers","substr","carbonSaving","rewards","MembersPage","concat","CreateJourneyForm","onJourneysUploaded","file","useRef","current","files","formData","FormData","append","headers","errors","newMessage","join","ref","marginTop","JourneysTable","journeys","source","memberId","processed","rewardsEarned","JourneysPage","AuthenticatedPage","path","getAuthenticatedApi","PrivateRoute","children","rest","render","location","Authentication","cookie","setCookie","removeCookie","authenticatedApi","useCookies","this","Axios","create","baseURL","defaults","authorization","token","console","error","RegistrationPage","success","setSuccess","registrationError","setRegistrationError","smartcard","setSmartcard","setGroups","fetchGroups","register","required","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sYAQaA,G,MAAY,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KACpBC,EAAUC,cAERC,GADSC,cACSC,OAAS,CAAEF,KAAM,CAAEG,SAAU,OAA/CH,KAH6C,EAIjBI,mBAAS,IAJQ,mBAI9CC,EAJ8C,KAIlCC,EAJkC,OAKrBF,mBAAS,IALY,mBAK9CG,EAL8C,KAKpCC,EALoC,OAMrBJ,mBAAS,IANY,mBAM9CK,EAN8C,KAMpCC,EANoC,OAOjBN,oBAAS,GAPQ,mBAO9CO,EAP8C,KAOlCC,EAPkC,KAS/CC,EAAK,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACZD,EAAEE,iBADU,SAGNnB,EAAKgB,MAAMN,EAAUE,GAHf,OAKRZ,EAAKoB,gBACPnB,EAAQoB,QAAQlB,GAGhBM,EAAc,sCATJ,2CAAH,sDAiBX,OAJIT,EAAKoB,iBACPnB,EAAQoB,QAAQlB,GAIhB,yBAAKmB,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8CACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,wBAAIA,UAAU,yBAAd,UAEF,0BAAMA,UAAU,QACd,yBAAKA,UAAU,cACb,2BAAOC,KAAK,QAAQD,UAAU,iCAAiCE,GAAG,oBAC3DC,mBAAiB,YAAYC,YAAY,yBACzCC,SAAU,SAAAV,GAAC,OAAIN,EAAYM,EAAEW,OAAOC,WAG7C,yBAAKP,UAAU,cACb,2BAAOC,KAAK,WAAWD,UAAU,iCAAiCE,GAAG,uBAC9DE,YAAY,WAAWC,SAAU,SAAAV,GAAC,OAAIJ,EAAYI,EAAEW,OAAOC,WAGpE,yBAAKP,UAAU,cACb,yBAAKA,UAAU,wCACb,2BAAOC,KAAK,WAAWO,QAAShB,EAAYa,SAAU,kBAAMZ,GAAeD,IAAaQ,UAAU,uBAAuBE,GAAG,gBAC1H,2BAAOF,UAAU,uBAAuBS,QAAQ,eAAhD,iBAGN,4BAAQT,UAAU,qCAAqCU,QAAShB,GAAhE,UAIAR,GAAe,6BAChBA,YCpERyB,EAA0B,WACrC,OACE,yBAAKX,UAAU,mBACb,wBAAIA,UAAU,yBAAd,aACA,uBAAGA,UAAU,QAAb,gECFOY,G,MAAiB,WAC5B,OACE,wBAAIZ,UAAU,gEAAgEE,GAAG,oBAC/E,kBAAC,IAAD,CAASF,UAAU,iEAAiEa,GAAG,KACrF,yBAAKb,UAAU,kCACb,uBAAGA,UAAU,iBAEf,yBAAKA,UAAU,2BAAf,0BAGF,wBAAIA,UAAU,yBAEd,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASc,OAAO,EAAMC,gBAAgB,SAASf,UAAU,WAAWa,GAAG,KACrE,uBAAGb,UAAU,gCACb,6CAGJ,wBAAIA,UAAU,oBAEd,yBAAKA,UAAU,mBAAf,UAIA,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASe,gBAAgB,SAASf,UAAU,WAAWa,GAAG,YACxD,uBAAGb,UAAU,sBACb,2CAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASe,gBAAgB,SAASf,UAAU,WAAWa,GAAG,kBACxD,uBAAGb,UAAU,wBACb,iDAIJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASe,gBAAgB,SAASf,UAAU,WAAWa,GAAG,WACxD,uBAAGb,UAAU,uBACb,0CAIJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASe,gBAAgB,SAASf,UAAU,WAAWa,GAAG,YACxD,uBAAGb,UAAU,sBACb,2CAGJ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASe,gBAAgB,SAASf,UAAU,WAAWa,GAAG,aACxD,uBAAGb,UAAU,qBACb,4CAGJ,wBAAIA,UAAU,oBAEd,yBAAKA,UAAU,mBAAf,WAIA,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASe,gBAAgB,SAASf,UAAU,WAAWa,GAAG,aACxD,uBAAGb,UAAU,qBACb,+CClEGgB,EAAS,SAAC,GAA2B,IAAzBtC,EAAwB,EAAxBA,KAQvB,OACE,yBAAKsB,UAAU,4EACb,0BAAMA,UAAU,uBAAhB,iBAAsDtB,EAAKuC,WAE3D,wBAAIjB,UAAU,sBAEZ,wBAAIA,UAAU,8BACZ,uBAAGA,UAAU,kBAAkBkB,KAAK,UAAUR,QAbvC,SAACf,GACdA,EAAEE,iBAEFnB,EAAKyC,UAUgEjB,GAAG,eAAekB,KAAK,SAASC,cAAY,WAAWC,gBAAc,OAAOC,gBAAc,SACvJ,0BAAMvB,UAAU,+CAAhB,UACA,uBAAGA,UAAU,oDClBZwB,EAAS,WACpB,OACE,4BAAQxB,UAAU,0BAClB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,iCACb,gE,OCHKyB,EAAmB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,IAAKC,EAAuC,EAAvCA,UAAuC,EACrD1C,mBAAS,IAD4C,mBACtE2C,EADsE,KAChEC,EADgE,OAE/C5C,mBAAS,IAFsC,mBAEtE6C,EAFsE,KAE7DC,EAF6D,KAIvEC,EAAQ,uCAAG,WAAOrC,GAAP,eAAAC,EAAA,6DACfD,EAAEE,iBADa,kBAIU6B,EAAIO,KAAK,UAAW,CAAEL,SAJhC,OAIPM,EAJO,OAMbL,EAAQ,IACRE,EAAW,mBACXJ,EAAUO,EAASC,MARN,kDAWbJ,EAAW,gCAXE,0DAAH,sDAed,OACE,yBAAK/B,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,qCAAd,WAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,mBAAmBgC,SAAUA,EAAUI,MAAO,CAAEC,SAAU,UACxE,2BAAIP,GACJ,2BAAO9B,UAAU,uBAAuBE,GAAG,aACzC,+BACA,4BACE,sCAGF,+BACA,4BACE,4BAAI,2BAAOD,KAAK,OAAO2B,KAAK,OAAOrB,MAAOqB,EAAMvB,SAAU,SAAAV,GAAC,OAAIkC,EAAQlC,EAAEW,OAAOC,QAAQP,UAAU,eAItG,4BAASoC,MAAO,CAAEE,MAAO,SAAWrC,KAAK,SAASD,UAAU,qCAAqCuC,SAAUX,EAAKY,OAAS,GAAzH,c,sZCrCH,IAAMC,EAAQ,YAAuE,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,WAAYlB,EAAyB,EAAzBA,IAAyB,EACjDzC,mBAAS,IADwC,mBAClF4D,EADkF,KACpEC,EADoE,OAE/C7D,oBAAS,GAFsC,mBAElF8D,EAFkF,KAEnEC,EAFmE,KAInFC,EAAoBC,uBAAY,SAAAnE,GACpC+D,EAAgB/D,EAAM8D,gBACrB,IAEGM,EAAiBC,mBAAQ,WAC7B,IAAMC,EAAY,uCAAG,sBAAAzD,EAAA,0DAEf0D,OAAOC,QAAP,6CAAqDV,EAAaW,KAAI,SAAAC,GAAC,OAAIA,EAAE7B,QAA7E,MAFe,uBAGjBoB,GAAkBD,GAHD,SAKXW,QAAQC,IAAId,EAAaW,KAAI,SAAAC,GAAC,OAAI/B,EAAIkC,OAAOH,EAAEvD,QALpC,OAOjB0C,EAAYC,GAPK,2CAAH,qDAWlB,OAAO,4BAAQ7C,UAAU,iBAAiB6D,IAAI,SAASnD,QAAS2C,GAAzD,YACN,CAACR,EAAcE,EAAerB,EAAKkB,IArBmD,EAuBrD3D,mBAAS,IAvB4C,mBAuBlF6E,EAvBkF,KAuBtEC,EAvBsE,OAwBzD9E,oBAAS,GAAlC+E,EAxBkF,oBAyBnFC,EAAgBvB,EAAKwB,QAAO,SAAAC,GAAI,OAAIA,EAAKvC,MAAQuC,EAAKvC,KAAKwC,SAASN,MACpEO,EAAyBjB,mBAAQ,WACrC,OAAO,kBAAC,EAAD,CAAiBkB,SAAU,SAAC3E,GAAD,OAAYoE,EAAcpE,EAAEW,OAAOC,QAAQuD,WAAYA,MACxF,CAACA,IAEJ,OACE,yBAAK9D,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,qCAAd,SAEF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oBACb,kBAAC,IAAD,CACE2C,QAASA,EACTR,KAAM8B,EACNM,YAAU,EACVC,2BAA4BR,EAC5BS,kBAAmB,GACnBC,WAAS,EACTC,mBAAoBN,EACpBO,gBAAc,EACdzB,eAAgBP,EAAaO,OAAiB0B,EAC9CC,qBAAsB7B,EACtB8B,kBAAmBhC,QAoBzBiC,EAAkB,SAAC,GAAD,IAAGlB,EAAH,EAAGA,WAAYQ,EAAf,EAAeA,SAAf,EAAyBW,QAAzB,OACtB,kBAACC,EAAD,CAAWhF,GAAG,SAASD,KAAK,OAAOG,YAAY,iBAAiBG,MAAOuD,EAAYzD,SAAUiE,KAGzFY,EAAYC,UAAOC,MAAV,K,8NCxER,IAAMC,EAAe,SAAC,GAAwD,IAAtD3D,EAAqD,EAArDA,IAAK4D,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,cACrC7C,EAAO4C,EAAQ9B,KAAI,SAAAgC,GAAC,O,yWAAA,EAAOC,WAAYC,qBAAWF,EAAEtF,KAASsF,MAanE,OACE,kBAAC,EAAD,CAAO7C,QAZO,CAAC,CACff,KAAM,KACN+D,SAAU,aACVC,UAAU,EACVtD,MAAO,SACP,CACAV,KAAM,OACN+D,SAAU,OACVC,UAAU,IAIelD,KAAMA,EAAME,WAAY2C,EAAe7D,IAAKA,K,8NCdlE,IAAMmE,EAAc,SAAC,GAA6B,IAA5BnE,EAA2B,EAA3BA,IAA2B,EACxBzC,qBADwB,mBAC/CqG,EAD+C,KACtCQ,EADsC,OAE5B7G,mBAAS,IAFmB,mBAE/C8G,EAF+C,KAExCC,EAFwC,KAItDC,qBAAU,WAAM,4CACd,4BAAArG,EAAA,sEACyB8B,EAAIwE,IAAI,YADjC,OACQhE,EADR,OAGE4D,EAAW5D,EAASC,KAAKA,MACzB6D,EAAS9D,EAASC,KAAK4D,OAJzB,4CADc,sBAQTT,GARU,WAAD,wBASZa,KAED,CAACzE,EAAK4D,IAYT,OACE,yBAAKtF,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,QAAb,8BACA,kBAAC,EAAD,CAAkB0B,IAAKA,EAAKC,UAdd,SAACO,GACjBoD,EAAQc,KAAKlE,EAASC,MACtB2D,EAAWR,GACXU,E,yWAAS,IAAK9D,EAAS6D,MAAf,GAAyBA,OAY/B,kBAAC,EAAD,CAAcrE,IAAKA,EAAK4D,QAASA,GAAW,GAAIC,cAT9B,SAACc,GACrBP,EAAWR,EAAQpB,QAAO,SAACoC,GAAD,OAAyBD,EAAQE,MAAK,SAAAC,GAAE,OAAIF,EAAGpG,KAAOsG,EAAGtG,eC3B1EuG,EAAyB,SAAC,GAAoE,IAAlE/E,EAAiE,EAAjEA,IAAKgF,EAA4D,EAA5DA,gBAAiBpB,EAA2C,EAA3CA,QAA2C,EAChFrG,mBAAS,IADuE,mBACjG2C,EADiG,KAC3FC,EAD2F,OAE5E5C,mBAAS,IAFmE,mBAEjG0H,EAFiG,KAEzFC,EAFyF,OAG1E3H,mBAAS,IAHiE,mBAGjG6C,EAHiG,KAGxFC,EAHwF,KAKlGC,EAAQ,uCAAG,WAAOrC,GAAP,eAAAC,EAAA,6DACfD,EAAEE,iBADa,kBAIU6B,EAAIO,KAAK,gBAAiB,CAAEL,OAAM+E,WAJ5C,OAIPzE,EAJO,OAMbL,EAAQ,IACRE,EAAW,yBACX2E,EAAgBxE,EAASC,MARZ,kDAWbJ,EAAW,sCAXE,0DAAH,sDAed,OACE,yBAAK/B,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,qCAAd,WAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,mBAAmBgC,SAAUA,EAAUI,MAAO,CAAEC,SAAU,UACxE,2BAAIP,GACJ,2BAAO9B,UAAU,uBAAuBE,GAAG,aACzC,+BACA,4BACE,oCACA,wCAGF,+BACA,4BACE,4BAAI,2BAAOD,KAAK,OAAO2B,KAAK,OAAOrB,MAAOqB,EAAMvB,SAAU,SAAAV,GAAC,OAAIkC,EAAQlC,EAAEW,OAAOC,QAAQP,UAAU,YAClG,4BACE,4BAAQ4B,KAAK,SAASvB,SAAU,SAAAV,GAAC,OAAIiH,EAAUjH,EAAEW,OAAOC,SACtD,4BAAQA,MAAM,IAAd,mBACE+E,EAAQ9B,KAAI,SAAAgC,GAAC,OAAI,kBAAC,EAAD,CAAc3B,IAAK2B,EAAEtF,GAAIyG,OAAQnB,YAM5D,4BAAQpD,MAAO,CAAEE,MAAO,SAAWrC,KAAK,SAASD,UAAU,qCAAqCuC,SAAUX,EAAKY,OAAS,GAAgB,KAAXmE,GAA7H,cASJE,EAAe,SAAC,GAA4C,IAA1CF,EAAyC,EAAzCA,OACtB,OACE,4BAAQpG,MAAOoG,EAAOzG,IAAKyG,EAAO/E,O,QCxDzBkF,EAAqB,SAAC,GAAiF,IAA/EpF,EAA8E,EAA9EA,IAAKqF,EAAyE,EAAzEA,cAAehB,EAA0D,EAA1DA,MAAOiB,EAAmD,EAAnDA,oBACxDtE,EAAOqE,EAAcvD,KAAI,SAAAyD,GAAC,MAAK,CACnC/G,GAAI+G,EAAE/G,GACNuF,WAAYyB,2BAAiBD,EAAE/G,IAC/B0B,KAAMqF,EAAErF,KACR+E,OAAQZ,EAAMkB,EAAEN,QAAQ/E,SAkB1B,OACE,kBAAC,EAAD,CAAOe,QAhBO,CAAC,CACff,KAAM,KACN+D,SAAU,aACVC,UAAU,EACVtD,MAAO,SACP,CACAV,KAAM,OACN+D,SAAU,OACVC,UAAU,GACV,CACAhE,KAAM,SACN+D,SAAU,SACVC,UAAU,IAIelD,KAAMA,EAAMhB,IAAKA,EAAKkB,WAAYoE,K,ykBCvBxD,IAAMG,EAAoB,SAAC,GAAmC,IAAlCzF,EAAiC,EAAjCA,IAAiC,EACpCzC,qBADoC,mBAC3DmI,EAD2D,KAClDC,EADkD,KAGlEpB,qBAAU,WAAM,4CACd,kCAAArG,EAAA,sEACyC8D,QAAQC,IAAI,CACjDjC,EAAIwE,IAAI,kBAAkBoB,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,QACtCT,EAAIwE,IAAI,YAAYoB,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,UAHpC,mCACS4E,EADT,KACwBzB,EADxB,KAME+B,EAAW,CAAEN,gBAAezB,YAN9B,4CADc,sBAUT8B,GAVU,WAAD,wBAWZG,KAED,CAAC7F,EAAK0F,IAaT,OACE,yBAAKpH,UAAU,mBACb,wBAAIA,UAAU,yBAAd,iBACA,uBAAGA,UAAU,QAAb,oCACA,kBAAC,EAAD,CACE0B,IAAKA,EACLgF,gBAjBkB,SAACxE,GACvBkF,EAAQL,cAAc5E,KAAKiE,KAAKlE,EAASC,MACzCiF,EAAQL,cAAchB,MAAtB,KAAmC7D,EAAS6D,MAA5C,GAAsDqB,EAAQL,cAAchB,OAC5EsB,EAAW,KAAKD,KAeZ9B,QAAS8B,EAAUA,EAAQ9B,QAAQnD,KAAO,KAC5C,kBAAC,EAAD,CACET,IAAKA,EACLsF,oBAfsB,SAACX,GAC3Be,EAAQL,cAAc5E,KAAOiF,EAAQL,cAAc5E,KAAK+B,QAAO,SAACsD,GAAD,OAAcnB,EAAQE,MAAK,SAAAkB,GAAE,OAAID,EAAGtH,KAAOuH,EAAGvH,SAC7GmH,EAAW,KAAKD,KAcZL,cAAeK,EAAUA,EAAQL,cAAc5E,KAAO,GACtD4D,MAAOqB,EAAUA,EAAQL,cAAchB,MAAQ,OC5C1C2B,EAAkB,SAAC,GAA4D,IAA1DhG,EAAyD,EAAzDA,IAAKiG,EAAoD,EAApDA,SAAUZ,EAA0C,EAA1CA,cAA0C,EACjE9H,mBAAS,IADwD,mBAClF2C,EADkF,KAC5EC,EAD4E,OAEjD5C,mBAAS,IAFwC,mBAElF2I,EAFkF,KAEpEC,EAFoE,OAG3D5I,mBAAS,IAHkD,mBAGlF6C,EAHkF,KAGzEC,EAHyE,KAKnFC,EAAQ,uCAAG,WAAOrC,GAAP,eAAAC,EAAA,6DACfD,EAAEE,iBADa,kBAIU6B,EAAIO,KAAK,SAAU,CAAEL,OAAMgG,iBAJrC,OAIP1F,EAJO,OAMbL,EAAQ,IACRE,EAAW,kBACX4F,EAASzF,EAASC,MARL,kDAWbJ,EAAW,+BAXE,0DAAH,sDAed,OACE,yBAAK/B,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,qCAAd,WAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,mBAAmBgC,SAAUA,EAAUI,MAAO,CAAEC,SAAU,UACxE,2BAAIP,GACJ,2BAAO9B,UAAU,uBAAuBE,GAAG,aACzC,+BACA,4BACE,oCACA,8CAGF,+BACA,4BACE,4BAAI,2BAAOD,KAAK,OAAO2B,KAAK,OAAOrB,MAAOqB,EAAMvB,SAAU,SAAAV,GAAC,OAAIkC,EAAQlC,EAAEW,OAAOC,QAAQP,UAAU,YAClG,4BACE,4BAAQ4B,KAAK,eAAevB,SAAU,SAAAV,GAAC,OAAIkI,EAAgBlI,EAAEW,OAAOC,SAClE,4BAAQA,MAAM,IAAd,yBACEwG,EAAcvD,KAAI,SAAAgC,GAAC,OAAI,kBAAC,EAAD,CAAoB3B,IAAK2B,EAAEtF,GAAI0H,aAAcpC,YAM9E,4BAAQpD,MAAO,CAAEE,MAAO,SAAWrC,KAAK,SAASD,UAAU,qCAAqCuC,SAAUX,EAAKY,OAAS,GAAsB,KAAjBoF,GAA7H,cASJE,EAAqB,SAAC,GAA8D,IAA5DF,EAA2D,EAA3DA,aAC5B,OACE,4BAAQrH,MAAOqH,EAAa1H,IAAK0H,EAAahG,O,QCxDrCmG,EAAc,SAAC,GAA4D,IAA1DrG,EAAyD,EAAzDA,IAAKsG,EAAoD,EAApDA,OAAQjC,EAA4C,EAA5CA,MAAOkC,EAAqC,EAArCA,aAC1CvF,EAAOsF,EAAOxE,KAAI,SAAAyD,GAAC,MAAK,CAC5B/G,GAAI+G,EAAE/G,GACNuF,WAAYyC,oBAAUjB,EAAE/G,IACxB0B,KAAMqF,EAAErF,KACRgG,aAAc7B,EAAMkB,EAAEW,cAAchG,SAkBtC,OACE,kBAAC,EAAD,CAAOe,QAhBO,CAAC,CACff,KAAM,KACN+D,SAAU,aACVC,UAAU,EACVtD,MAAO,SACP,CACAV,KAAM,OACN+D,SAAU,OACVC,UAAU,GACV,CACAhE,KAAM,eACN+D,SAAU,eACVC,UAAU,IAIelD,KAAMA,EAAMhB,IAAKA,EAAKkB,WAAYqF,K,ykBCvBxD,IAAME,EAAa,SAAC,GAA4B,IAA3BzG,EAA0B,EAA1BA,IAA0B,EACtBzC,qBADsB,mBAC7CmI,EAD6C,KACpCC,EADoC,KAGpDpB,qBAAU,WAAM,4CACd,kCAAArG,EAAA,sEACwC8D,QAAQC,IAAI,CAChDjC,EAAIwE,IAAI,WAAWoB,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,QAC/BT,EAAIwE,IAAI,kBAAkBoB,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,UAH1C,mCACS6F,EADT,KACiBjB,EADjB,KAMEM,EAAW,CAAEW,SAAQjB,kBANvB,4CADc,sBAUTK,GAVU,WAAD,wBAWZG,KAED,CAAC7F,EAAK0F,IAaT,OACE,yBAAKpH,UAAU,mBACb,wBAAIA,UAAU,yBAAd,UACA,uBAAGA,UAAU,QAAb,6BACA,kBAAC,EAAD,CACE0B,IAAKA,EACLiG,SAjBW,SAACzF,GAChBkF,EAAQY,OAAO7F,KAAKiE,KAAKlE,EAASC,MAClCiF,EAAQY,OAAOjC,MAAf,KAA4B7D,EAAS6D,MAArC,GAA+CqB,EAAQY,OAAOjC,OAC9DsB,EAAW,KAAKD,KAeZL,cAAeK,EAAUA,EAAQL,cAAc5E,KAAO,KACxD,kBAAC,EAAD,CACET,IAAKA,EACLuG,aAfe,SAAC5B,GACpBe,EAAQY,OAAO7F,KAAOiF,EAAQY,OAAO7F,KAAK+B,QAAO,SAACsD,GAAD,OAAcnB,EAAQE,MAAK,SAAAkB,GAAE,OAAID,EAAGtH,KAAOuH,EAAGvH,SAC/FmH,EAAW,KAAKD,KAcZY,OAAQZ,EAAUA,EAAQY,OAAO7F,KAAO,GACxC4D,MAAOqB,EAAUA,EAAQY,OAAOjC,MAAQ,OC9CnCqC,EAAoB,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,qBAAsBC,EAAsD,EAAtDA,wBAcxD,OACE,4BAAQtI,UAAU,8DACV4B,KAAK,uBACL2G,aAAcF,EACdhI,SAAU,SAAAV,GAAC,OAAI2I,EAAwB3I,EAAEW,OAAOC,SACtD,4BAAQA,MAAM,IAAd,yBAlBU,CACZ,YACA,eACA,OACA,gBACA,OACA,MACA,QACA,UACA,OACA,kBASUiD,KAAI,SAACgF,EAAGC,GAAJ,OAAU,4BAAQ5E,IAAK4E,EAAGlI,MAAOiI,EAAEE,eAAgBF,QCjBxDG,EAAmB,SAAC,GAAwD,IAAtDjH,EAAqD,EAArDA,IAAKkH,EAAgD,EAAhDA,WAAYZ,EAAoC,EAApCA,OAAoC,EAC5D/I,mBAAS,IADmD,mBAC/E4J,EAD+E,KACxEC,EADwE,OAE9B7J,mBAAS,IAFqB,mBAE/EoJ,EAF+E,KAEzDC,EAFyD,OAGxCrJ,mBAAS,QAH+B,mBAG/E8J,EAH+E,KAG9DC,EAH8D,OAItD/J,mBAAS,MAJ6C,mBAI/EgK,EAJ+E,KAIrEC,EAJqE,OAKxDjK,mBAAS,IAL+C,mBAK/E6C,EAL+E,KAKtEC,EALsE,KAOhFC,EAAQ,uCAAG,WAAOrC,GAAP,eAAAC,EAAA,6DACfD,EAAEE,iBADa,kBAIU6B,EAAIO,KAAK,WAAY,CAAE4G,QAAOR,uBAAsBU,iBAAkBA,EAAiBE,UAAWA,IAJ5G,OAIP/G,EAJO,OAMb8G,EAAmB,QACnBjH,EAAWkH,EAAW,yBACtBC,EAAY,MACZN,EAAW1G,EAASC,MATP,kDAYbJ,EAAW,iCAZE,0DAAH,sDAgBRoH,EAAYN,EAAMrG,OAAS,IAAMyG,EAAW,EAElD,OACE,yBAAKjJ,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,qCAAd,WAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,mBAAmBgC,SAAUA,EAAUI,MAAO,CAAEC,SAAU,UACxE,2BAAIP,GACJ,2BAAO9B,UAAU,uBAAuBE,GAAG,aACzC,+BACA,4BACE,qCACA,4CACA,gDACA,0CAGF,+BACA,4BACE,4BACE,4BAAQ0B,KAAK,QAAQvB,SAAU,SAAAV,GAAC,OAAImJ,EAASnJ,EAAEW,OAAOC,SACpD,4BAAQA,MAAM,IAAd,kBACEyH,EAAOxE,KAAI,SAAAgC,GAAC,OAAI,4BAAQjF,MAAOiF,EAAEtF,IAAKsF,EAAE5D,WAG9C,4BACE,kBAAC,EAAD,CAAmByG,qBAAsBA,EAAsBC,wBAAyBA,KAE1F,4BAAI,2BAAOrI,KAAK,OAAO2B,KAAK,kBAAkBrB,MAAOwI,EAAiB1I,SAAU,SAAAV,GAAC,OAAIqJ,EAAmBrJ,EAAEW,OAAOC,QAAQP,UAAU,YACnI,4BAAI,2BAAOC,KAAK,OAAO2B,KAAK,WAAWrB,MAAO0I,EAAU5I,SAAU,SAAAV,GAAC,OAAIuJ,EAAYvJ,EAAEW,OAAOC,QAAQP,UAAU,eAIlH,4BAAQoC,MAAO,CAAEE,MAAO,SAAWrC,KAAK,SAASD,UAAU,qCAAqCuC,UAAW4G,GAA3G,cC1DGC,EAAe,SAAC,GAA+D,IAA7D1H,EAA4D,EAA5DA,IAAK2H,EAAuD,EAAvDA,QAAStD,EAA8C,EAA9CA,MAAOuD,EAAuC,EAAvCA,cAC5C5G,EAAO2G,EAAQ7F,KAAI,SAAAyD,GAAC,MAAK,CAC7B/G,GAAI+G,EAAE/G,GACNuF,WAAYwB,EAAE/G,GAAIqJ,OAAO,GACzB3H,KAAMmE,EAAMkB,EAAE4B,OAAOjH,KACrByG,qBAAsBpB,EAAEoB,qBACxBU,gBAAiB9B,EAAE8B,gBAAkB,SACrCS,aAAcvC,EAAEuC,aAAe,KAC/BC,QAASxC,EAAEwC,YA8Bb,OACE,kBAAC,EAAD,CAAO9G,QA5BO,CAAC,CACff,KAAM,KACN+D,SAAU,aACVC,UAAU,EACVtD,MAAO,SACP,CACAV,KAAM,QACN+D,SAAU,OACVC,UAAU,GACV,CACAhE,KAAM,eACN+D,SAAU,uBACVC,UAAU,GACV,CACAhE,KAAM,mBACN+D,SAAU,kBACVC,UAAU,GACV,CACAhE,KAAM,UACN+D,SAAU,UACVC,UAAU,GACV,CACAhE,KAAM,gBACN+D,SAAU,eACVC,UAAU,IAIelD,KAAMA,EAAMhB,IAAKA,EAAKkB,WAAY0G,K,ykBCrCxD,IAAMI,EAAc,SAAC,GAA6B,IAA5BhI,EAA2B,EAA3BA,IAA2B,EACxBzC,qBADwB,mBAC/CmI,EAD+C,KACtCC,EADsC,KAGtDpB,qBAAU,WAAM,4CACd,kCAAArG,EAAA,sEACkC8D,QAAQC,IAAI,CAC1CjC,EAAIwE,IAAI,YAAYoB,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,QAChCT,EAAIwE,IAAI,WAAWoB,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,UAHnC,mCACSkH,EADT,KACkBrB,EADlB,KAMEX,EAAW,CAAEgC,UAASrB,WANxB,4CADc,sBAUTZ,GAVU,WAAD,wBAWZG,KAED,CAAC7F,EAAK0F,IAaT,OACE,yBAAKpH,UAAU,mBACb,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,QAAb,8BACA,kBAAC,EAAD,CACE0B,IAAKA,EACLkH,WAjBa,SAAC1G,GAClBkF,EAAQiC,QAAQlH,KAAOiF,EAAQiC,QAAQlH,KAAKwH,OAAOzH,EAASC,MAC5DiF,EAAQiC,QAAQtD,MAAhB,KAA6B7D,EAAS6D,MAAtC,GAAgDqB,EAAQiC,QAAQtD,OAChEsB,EAAW,KAAKD,KAeZY,OAAQZ,EAAUA,EAAQY,OAAO7F,KAAO,KAC1C,kBAAC,EAAD,CACET,IAAKA,EACL4H,cAfgB,SAACjD,GACrBe,EAAQiC,QAAQlH,KAAOiF,EAAQiC,QAAQlH,KAAK+B,QAAO,SAACsD,GAAD,OAAcnB,EAAQE,MAAK,SAAAkB,GAAE,OAAID,EAAGtH,KAAOuH,EAAGvH,SACjGmH,EAAW,KAAKD,KAcZiC,QAASjC,EAAUA,EAAQiC,QAAQlH,KAAO,GAC1C4D,MAAOqB,EAAUA,EAAQiC,QAAQtD,MAAQ,OC7CpC6D,EAAoB,SAAC,GAAyD,IAAvDlI,EAAsD,EAAtDA,IAAKmI,EAAiD,EAAjDA,mBACjCC,EAAYC,iBAAO,MAD+D,EAE1D9K,mBAAS,IAFiD,mBAEjF6C,EAFiF,KAExEC,EAFwE,KAIlFC,EAAQ,uCAAG,WAAOrC,GAAP,qBAAAC,EAAA,yDACfD,EAAEE,iBAEGiK,EAAKE,QAAQC,MAAM,GAHT,yCAINlI,EAAW,6BAJL,wBAQPmI,EAAW,IAAIC,UACZC,OAAO,OAAQN,EAAKE,QAAQC,MAAM,GAAW,cAEhDI,EAAU,CAAE,eAAgB,uBAXrB,SAYQ3I,EAAIO,KAAK,WAAYiI,EAAU,CAAEG,YAAW/C,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,KAAKA,KAAKmI,UAZ1E,OAYPA,EAZO,OAaPC,EAA+B,IAAlBD,EAAO9H,OAAe,oBAAsB8H,EAAOE,KAAK,MAE3EzI,EAAWwI,GACXV,IAhBa,kDAmBb9H,EAAW,mCAnBE,0DAAH,sDAuBd,OACE,yBAAK/B,UAAU,oBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,qCAAd,WAEF,yBAAKA,UAAU,aACb,0BAAMA,UAAU,mBAAmBgC,SAAUA,EAAUI,MAAO,CAAEC,SAAU,UACxE,2BAAIP,GACJ,2BAAO7B,KAAK,OAAO2B,KAAK,aAAa6I,IAAKX,IAC1C,4BAAQ1H,MAAO,CAAEE,MAAO,QAASoI,UAAW,QAAUzK,KAAK,SAASD,UAAU,sCAA9E,c,+NClCH,IAAM2K,GAAgB,SAAC,GAA2C,IAAzCjJ,EAAwC,EAAxCA,IACxBgB,EADgE,EAAnCkI,SACbpH,KAAI,SAAAyD,GAAC,O,2WAAA,IACtBA,EADsB,CAEzBrF,KAAMqF,EAAE4D,OACR3K,GAAI+G,EAAE/G,GAAK,GACXuF,WAAYwB,EAAE/G,GACd4K,SAAU7D,EAAE6D,SAASvB,OAAO,GAC5BwB,UAA2B,OAAhB9D,EAAE8D,UAAqB,UAAY9D,EAAE8D,UAChDvB,aAAiC,OAAnBvC,EAAEuC,aAAwB,IAAMvC,EAAEuC,aAAe,KAC/DwB,cAAmC,OAApB/D,EAAE+D,cAAyB,IAAM/D,EAAE+D,mBA8CpD,OACE,kBAAC,EAAD,CAAOrI,QA5CO,CAAC,CACff,KAAM,KACN+D,SAAU,aACVC,UAAU,EACVtD,MAAO,QACP,CACAV,KAAM,SACN+D,SAAU,SACVC,UAAU,GACV,CACAhE,KAAM,WACN+D,SAAU,WACVC,UAAU,GACV,CACAhE,KAAM,YACN+D,SAAU,YACVC,UAAU,GACV,CACAhE,KAAM,cACN+D,SAAU,aACVC,UAAU,GACV,CACAhE,KAAM,YACN+D,SAAU,WACVC,UAAU,GACV,CACAhE,KAAM,WACN+D,SAAU,WACVC,UAAU,GACV,CACAhE,KAAM,OACN+D,SAAU,OACVC,UAAU,GACV,CACAhE,KAAM,iBACN+D,SAAU,gBACVC,UAAU,GACV,CACAhE,KAAM,gBACN+D,SAAU,eACVC,UAAU,IAIelD,KAAMA,EAAMhB,IAAKA,KCxDjCuJ,GAAe,SAAC,GAA8B,IAA7BvJ,EAA4B,EAA5BA,IAA4B,EAC1BzC,qBAD0B,mBACjDmI,EADiD,KACxCC,EADwC,KAGxDpB,qBAAU,WAAM,4CACd,4BAAArG,EAAA,sEACyB8B,EAAIwE,IAAI,aAAaoB,MAAK,SAAA7D,GAAC,OAAIA,EAAEtB,QAD1D,OACQyI,EADR,OAGEvD,EAAW,CAAEuD,aAHf,4CADc,sBAOTxD,GAPU,WAAD,wBAQZG,KAED,CAAC7F,EAAK0F,IAMT,OACE,yBAAKpH,UAAU,mBACb,wBAAIA,UAAU,yBAAd,YACA,uBAAGA,UAAU,QAAb,oCACA,kBAAC,EAAD,CACE0B,IAAKA,EACLmI,mBAVc,WAClBxC,EAAW,SAUT,kBAAC,GAAD,CACE3F,IAAKA,EACLkJ,SAAUxD,EAAUA,EAAQwD,SAASzI,KAAO,OCpBvC+I,GAAoB,SAAC,GAAsC,IAApCxM,EAAmC,EAAnCA,KAClC,OACE,yBAAKwB,GAAG,WACN,kBAAC,EAAD,MACA,yBAAKA,GAAG,kBAAkBF,UAAU,sBAClC,yBAAKE,GAAG,WACN,kBAAC,EAAD,CAAQxB,KAAMA,IACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyM,KAAK,YACV,kBAAC,EAAD,CAAazJ,IAAKhD,EAAK0M,yBAEzB,kBAAC,IAAD,CAAOD,KAAK,kBACV,kBAAC,EAAD,CAAmBzJ,IAAKhD,EAAK0M,yBAE/B,kBAAC,IAAD,CAAOD,KAAK,WACV,kBAAC,EAAD,CAAYzJ,IAAKhD,EAAK0M,yBAExB,kBAAC,IAAD,CAAOD,KAAK,YACV,kBAAC,EAAD,CAAazJ,IAAKhD,EAAK0M,yBAEzB,kBAAC,IAAD,CAAOD,KAAK,aACV,kBAAC,GAAD,CAAczJ,IAAKhD,EAAK0M,yBAE1B,kBAAC,IAAD,CAAOD,KAAK,KACV,kBAAC,EAAD,UAKR,kBAAC,EAAD,S,SCxCKE,GAAe,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAU5M,EAAyB,EAAzBA,KAAS6M,EAAgB,oCAChE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAS,gBAAGC,EAAH,EAAGA,SAAH,OACP/M,EAAKoB,gBAAkBwL,EAAW,kBAAC,IAAD,CAAUzK,GAAI,CAAE7B,SAAU,SAAUD,MAAO,CAAEF,KAAM4M,W,+CCLhFC,GAAb,WAME,WACmBhK,GAChB,0BADgBA,MACjB,KAPeiK,YAOf,OANeC,eAMf,OALeC,kBAKf,OAJeC,sBAIf,QAC0CC,aAAW,CAAC,SADtD,mBACOJ,EADP,KACeC,EADf,KAC0BC,EAD1B,KAGAG,KAAKL,OAASA,EAAOjN,KACrBsN,KAAKJ,UAAYA,EACjBI,KAAKH,aAAeA,EACpBG,KAAKF,iBAAmBG,KAAMC,OAAO,CACnCC,QAASzK,EAAI0K,SAASD,QACtB9B,QAAS,CACPgC,cAAe,UAAYL,KAAKL,QAAUK,KAAKL,OAAOW,UAjB9D,4FA0BqBlN,EAAkBE,GA1BvC,gGA4B6B0M,KAAKtK,IAAIO,KAAK,SAAU,CAAE7C,WAAUE,aA5BjE,OA4BY4C,EA5BZ,OA8BM8J,KAAKJ,UAAU,OAAQ1J,EAASC,KAAKA,MA9B3C,gDAiCMoK,QAAQC,MAAR,MAjCN,iJAsCIR,KAAKH,aAAa,UAtCtB,4CA0CI,OAAOG,KAAKF,mBA1ChB,gCA8CI,OAAOE,KAAKL,OAAO/J,OA9CvB,sCAuBI,OAAOoK,KAAKL,aAAgC9G,IAAtBmH,KAAKL,OAAOW,UAvBtC,KCGaG,I,MAAmB,SAAC,GAAoC,IAAlC/K,EAAiC,EAAjCA,IAAiC,EACpCzC,oBAAS,GAD2B,mBAC3DyN,EAD2D,KAClDC,EADkD,OAEhB1N,mBAAS,IAFO,mBAE3D2N,EAF2D,KAExCC,EAFwC,OAGhC5N,mBAAS,IAHuB,mBAG3D6N,EAH2D,KAGhDC,EAHgD,OAIV9N,mBAAS,IAJC,mBAI3DoJ,EAJ2D,KAIrCC,EAJqC,OAKpBrJ,mBAAS,GALW,mBAK3D8J,EAL2D,KAK1CC,EAL0C,OAMxC/J,mBAAS,IAN+B,mBAM3D4J,EAN2D,KAMpDC,EANoD,OAOtC7J,mBAAS,IAP6B,mBAO3D+I,EAP2D,KAOnDgF,EAPmD,KASlE/G,qBAAU,WAAM,4CACd,4BAAArG,EAAA,sEACyB8B,EAAIwE,IAAI,WADjC,OACQhE,EADR,OAGE8K,EAAU9K,EAASC,KAAKA,MAH1B,4CADc,sBAOQ,IAAlB6F,EAAOxF,QAPI,WAAD,wBAQZyK,KAED,CAACvL,EAAKsG,IAET,IAAMkF,EAAQ,uCAAG,WAAOvN,GAAP,SAAAC,EAAA,6DACfD,EAAEE,iBADa,kBAIP6B,EAAIO,KAAK,UAAW,CAAE6K,YAAWzE,uBAAsBU,kBAAiBF,UAJjE,OAKb8D,GAAW,GALE,gDAQbE,EAAqB,yCARR,yDAAH,sDAYR1D,EAAY2D,EAAUtK,QAAU,IAA+B,KAAzB6F,GAA+BU,EAAkB,GAAe,KAAVF,EAwDlG,OACE,yBAAK7I,UAAU,aACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,8CACf,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACX0M,EAzBhB,oCACE,yBAAK1M,UAAU,eACb,wBAAIA,UAAU,yBAAd,YAEF,yCAGA,mKAGA,8BAhDF,oCACE,yBAAKA,UAAU,eACb,wBAAIA,UAAU,yBAAd,aAEF,0BAAMA,UAAU,QACd,yBAAKA,UAAU,cACb,2BAAOC,KAAK,OAAOD,UAAU,iCAAiCE,GAAG,wBAC1DC,mBAAiB,gBAAgBC,YAAY,4BAA4B+M,UAAQ,EACjF9M,SAAU,SAAAV,GAAC,OAAIoN,EAAapN,EAAEW,OAAOC,WAG9C,yBAAKP,UAAU,cACb,kBAAC,EAAD,CAAmBqI,qBAAsBA,EAAsBC,wBAAyBA,KAE1F,yBAAKtI,UAAU,cACb,2BAAOC,KAAK,OAAOD,UAAU,iCAAiCE,GAAG,uBAC1DC,mBAAiB,eAAeC,YAAY,8BAA8B+M,UAAQ,EAClF9M,SAAU,SAAAV,GAAC,OAAIqJ,GAAoBrJ,EAAEW,OAAOC,WAGrD,yBAAKP,UAAU,cACb,4BAAQA,UAAU,6CAA6C4B,KAAK,QAAQvB,SAAU,SAAAV,GAAC,OAAImJ,EAASnJ,EAAEW,OAAOC,SAC3G,4BAAQA,MAAM,IAAd,kBACEyH,EAAOxE,KAAI,SAACgC,GAAD,OAAsB,4BAAQjF,MAAOiF,EAAEtF,IAAKsF,EAAE5D,WAG/D,4BAAQ3B,KAAK,SAASD,UAAU,qCAAqCU,QAASwM,EAAU3K,UAAW4G,GAAnG,aAIAyD,GAAsB,6BACvBA,aC7DWQ,QACW,cAA7B9J,OAAOmI,SAAS4B,UAEe,UAA7B/J,OAAOmI,SAAS4B,UAEhB/J,OAAOmI,SAAS4B,SAASC,MACvB,2D,YCVNC,IAAS/B,OAAO,mBCEG,WACjB,IAAM9J,EAAMuK,KAAMC,OAAO,CAAEC,QAAS,iCAC9BzN,EAAO,IAAIgN,GAAehK,GAEhC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyJ,KAAK,UACV,kBAAC,EAAD,CAAWzM,KAAMA,KAEnB,kBAAC,IAAD,CAAOyM,KAAK,aACV,kBAAC,GAAD,CAAkBzJ,IAAKA,KAEzB,kBAAC,GAAD,CAAchD,KAAMA,EAAMyM,KAAK,KAC7B,kBAAC,GAAD,CAAmBzM,KAAMA,SDhBnB,MAAS8O,SAASC,eAAe,SDiI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtG,MAAK,SAAAuG,GACjCA,EAAaC,kB","file":"static/js/main.fe82867c.chunk.js","sourcesContent":["import React, { FormEvent, useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { Authentication } from \"../Authentication\";\nimport {\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nexport const LoginPage = ({ auth }: LoginPageProps) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: \"/\" } };\n  const [loginError, setLoginError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(true);\n\n  const login = async (e: FormEvent) => {\n    e.preventDefault();\n\n    await auth.login(username, password);\n\n    if (auth.isAuthenticated) {\n      history.replace(from);\n    }\n    else {\n      setLoginError(\"Unable to login, please try again.\");\n    }\n  };\n\n  if (auth.isAuthenticated) {\n    history.replace(from);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Login</h1>\n                    </div>\n                    <form className=\"user\">\n                      <div className=\"form-group\">\n                        <input type=\"email\" className=\"form-control form-control-user\" id=\"exampleInputEmail\"\n                               aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\"\n                               onChange={e => setUsername(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <input type=\"password\" className=\"form-control form-control-user\" id=\"exampleInputPassword\"\n                               placeholder=\"Password\" onChange={e => setPassword(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox small\">\n                          <input type=\"checkbox\" checked={rememberMe} onChange={() => setRememberMe(!rememberMe)} className=\"custom-control-input\" id=\"customCheck\"/>\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck\">Remember Me</label>\n                        </div>\n                      </div>\n                      <button className=\"btn btn-primary btn-user btn-block\" onClick={login}>\n                        Login\n                      </button>\n                    </form>\n                    { loginError && (<hr />) }\n                    {loginError}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface LoginPageProps {\n  auth: Authentication\n}\n","import React from \"react\";\n\nexport const DashboardPage: React.FC = () => {\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Dashboard</h1>\n      <p className=\"mb-4\">This will be the dashboard page with a bit of information.</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport \"./SideNavigation.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const SideNavigation = () => {\n  return (\n    <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n      <NavLink className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/\">\n        <div className=\"sidebar-brand-icon rotate-n-15\">\n          <i className=\"fas fa-leaf\"></i>\n        </div>\n        <div className=\"sidebar-brand-text mx-3\">Eco Rewards Hub Admin</div>\n      </NavLink>\n\n      <hr className=\"sidebar-divider my-0\"/>\n\n      <li className=\"nav-item\">\n        <NavLink exact={true} activeClassName=\"active\" className=\"nav-link\" to=\"/\">\n          <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n          <span>Dashboard</span></NavLink>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Manage\n      </div>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/schemes\">\n          <i className=\"fas fa-fw fa-city\"></i>\n          <span>Schemes</span></NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/organisations\">\n          <i className=\"fas fa-fw fa-school\"></i>\n          <span>Organisations</span>\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/groups\">\n          <i className=\"fas fa-fw fa-users\"></i>\n          <span>Groups</span>\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/members\">\n          <i className=\"fas fa-fw fa-user\"></i>\n          <span>Members</span></NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/journeys\">\n          <i className=\"fas fa-fw fa-bus\"></i>\n          <span>Journeys</span></NavLink>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Reports\n      </div>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/journeys\">\n          <i className=\"fas fa-fw fa-bus\"></i>\n          <span>Journeys</span></NavLink>\n      </li>\n\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Authentication } from \"../../Authentication\";\n\nexport const TopBar = ({ auth }: TopBarProps) => {\n\n  const logout = (e: any) => {\n    e.preventDefault();\n\n    auth.logout();\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n      <span className=\"text-gray-600 small\">Welcome back, { auth.getName() }</span>\n\n      <ul className=\"navbar-nav ml-auto\">\n\n        <li className=\"nav-item dropdown no-arrow\">\n          <a className=\"dropdown-toggle\" href=\"/logout\" onClick={logout} id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Logout</span>\n            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          </a>\n        </li>\n\n      </ul>\n\n    </nav>\n\n  );\n};\n\ninterface TopBarProps {\n  auth: Authentication;\n}\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"sticky-footer bg-white\">\n    <div className=\"container my-auto\">\n      <div className=\"copyright text-center my-auto\">\n        <span>Copyright &copy; Eco Rewards</span>\n      </div>\n    </div>\n  </footer>\n  );\n};\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const CreateSchemeForm = ({ api, addScheme }: CreateSchemeFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/scheme\", { name });\n\n      setName(\"\");\n      setMessage(\"Scheme created.\");\n      addScheme(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating scheme.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"250px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n            </tr>\n            </tbody>\n          </table>\n          <button  style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateSchemeFormProps {\n  api: AxiosInstance,\n  addScheme: (response: HttpResponse<SchemeJsonView>) => any\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport DataTable, { IDataTableColumn } from \"react-data-table-component\";\nimport styled from \"styled-components\";\nimport \"./Table.css\";\nimport { AxiosInstance } from \"axios\";\n\nexport const Table = <T extends Row>({ rows, columns, removeRows, api }: TableProps<T>) => {\n  const [selectedRows, setSelectedRows] = useState([] as Row[]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n\n  const handleRowSelected = useCallback(state => {\n    setSelectedRows(state.selectedRows);\n  }, []);\n\n  const contextActions = useMemo(() => {\n    const handleDelete = async () => {\n\n      if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n        setToggleCleared(!toggleCleared);\n\n        await Promise.all(selectedRows.map(r => api.delete(r.id)));\n\n        removeRows!(selectedRows);\n      }\n    };\n\n    return <button className=\"btn btn-danger\" key=\"delete\" onClick={handleDelete}>Delete</button>;\n  }, [selectedRows, toggleCleared, api, removeRows]);\n\n  const [filterText, setFilterText] = useState('');\n  const [resetPaginationToggle] = useState(false);\n  const filteredItems = rows.filter(item => item.name && item.name.includes(filterText));\n  const subHeaderComponentMemo = useMemo(() => {\n    return <FilterComponent onFilter={(e: any) => setFilterText(e.target.value)} filterText={filterText} />;\n  }, [filterText]);\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Edit</h6>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <DataTable\n            columns={columns}\n            data={filteredItems}\n            pagination\n            paginationResetDefaultPage={resetPaginationToggle}\n            paginationPerPage={30}\n            subHeader\n            subHeaderComponent={subHeaderComponentMemo}\n            selectableRows\n            contextActions={removeRows ? contextActions : undefined}\n            onSelectedRowsChange={handleRowSelected}\n            clearSelectedRows={toggleCleared}\n          />\n        </div>\n      </div>\n    </div>\n  )\n};\n\ninterface TableProps<T extends Row> {\n  rows: T[],\n  columns: IDataTableColumn<T>[],\n  removeRows?: (rows: Row[]) => any,\n  api: AxiosInstance\n}\n\nexport interface Row {\n  id: string,\n  name: string\n}\n\nconst FilterComponent = ({ filterText, onFilter, onClear }: any) => (\n  <TextField id=\"search\" type=\"text\" placeholder=\"Filter By Name\" value={filterText} onChange={onFilter} />\n);\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport { toSchemeId } from \"eco-rewards-hub/dist/src/scheme/Scheme\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const SchemesTable = ({ api, schemes, removeSchemes }: SchemesTableProps) => {\n  const rows = schemes.map(s => ({ numeric_id: toSchemeId(s.id!), ...s }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} removeRows={removeSchemes} api={api}/>\n  );\n};\n\ninterface SchemesTableProps {\n  api: AxiosInstance,\n  schemes: (SchemeJsonView & { id: string })[],\n  removeSchemes: (schemes: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateSchemeForm } from \"./CreateSchemeForm/CreateSchemeForm\";\nimport { SchemesTable } from \"./SchemesTable/SchemesTable\";\nimport { HttpResponse, SchemeJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const SchemesPage = ({api}: SchemesPageProps) => {\n  const [schemes, setSchemes] = useState();\n  const [links, setLinks] = useState({});\n\n  useEffect(() => {\n    async function fetchSchemes() {\n      const response = await api.get(\"/schemes\");\n\n      setSchemes(response.data.data);\n      setLinks(response.data.links);\n    }\n\n    if (!schemes) {\n      fetchSchemes();\n    }\n  }, [api, schemes]);\n\n  const addScheme = (response: HttpResponse<SchemeJsonView>) => {\n    schemes.push(response.data);\n    setSchemes(schemes);\n    setLinks({ ...response.links, ...links});\n  };\n\n  const removeSchemes = (removed: Row[]) => {\n    setSchemes(schemes.filter((s1: SchemeJsonView) => !removed.some(s2 => s1.id === s2.id)));\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Schemes</h1>\n      <p className=\"mb-4\">Create and manage schemes.</p>\n      <CreateSchemeForm api={api} addScheme={addScheme}/>\n      <SchemesTable api={api} schemes={schemes || []} removeSchemes={removeSchemes}/>\n    </div>\n  );\n};\n\ninterface SchemesPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, OrganisationJsonView, SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const CreateOrganisationForm = ({ api, addOrganisation, schemes }: CreateOrganisationFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [scheme, setScheme] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/organisation\", { name, scheme });\n\n      setName(\"\");\n      setMessage(\"Organisation created.\");\n      addOrganisation(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating organisation.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"400px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n              <th>Scheme</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n              <td>\n                <select name=\"scheme\" onChange={e => setScheme(e.target.value)}>\n                  <option value=\"\">&lt;Select scheme&gt;</option>\n                  { schemes.map(s => <SchemeOption key={s.id} scheme={s} />)}\n                </select>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3 || scheme === \"\"}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst SchemeOption = ({ scheme }: { scheme: SchemeJsonView }) => {\n  return (\n    <option value={scheme.id}>{scheme.name}</option>\n  );\n};\n\ninterface CreateOrganisationFormProps {\n  api: AxiosInstance,\n  addOrganisation: (response: HttpResponse<OrganisationJsonView>) => any,\n  schemes: SchemeJsonView[]\n}\n","import React from \"react\";\nimport { toOrganisationId } from \"eco-rewards-hub/dist/src/organisation/Organisation\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { OrganisationJsonView } from \"eco-rewards-hub\";\n\nexport const OrganisationsTable = ({ api, organisations, links, removeOrganisations }: OrganisationsTableProps) => {\n  const rows = organisations.map(o => ({\n    id: o.id!,\n    numeric_id: toOrganisationId(o.id!),\n    name: o.name,\n    scheme: links[o.scheme].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Scheme\",\n    selector: \"scheme\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeOrganisations}/>\n  );\n};\n\ninterface OrganisationsTableProps {\n  api: AxiosInstance,\n  organisations: OrganisationJsonView[],\n  links: Record<string, any>,\n  removeOrganisations: (organisations: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateOrganisationForm } from \"./CreateOrganisationForm/CreateOrganisationForm\";\nimport { OrganisationsTable } from \"./OrganisationsTable/OrganisationsTable\";\nimport { HttpResponse, OrganisationJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const OrganisationsPage = ({api}: OrganisationsPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [organisations, schemes] = await Promise.all([\n        api.get(\"/organisations\").then(r => r.data),\n        api.get(\"/schemes\").then(r => r.data)\n      ]);\n\n      setApiData({ organisations, schemes });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addOrganisation = (response: HttpResponse<OrganisationJsonView>) => {\n    apiData.organisations.data.push(response.data);\n    apiData.organisations.links = { ...response.links, ...apiData.organisations.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeOrganisations = (removed: Row[]) => {\n    apiData.organisations.data = apiData.organisations.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Organisations</h1>\n      <p className=\"mb-4\">Create and manage organisations.</p>\n      <CreateOrganisationForm\n        api={api}\n        addOrganisation={addOrganisation}\n        schemes={apiData ? apiData.schemes.data : []}/>\n      <OrganisationsTable\n        api={api}\n        removeOrganisations={removeOrganisations}\n        organisations={apiData ? apiData.organisations.data : []}\n        links={apiData ? apiData.organisations.links : {}}/>\n    </div>\n  );\n};\n\ninterface OrganisationsPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, GroupJsonView, OrganisationJsonView } from \"eco-rewards-hub\";\n\nexport const CreateGroupForm = ({ api, addGroup, organisations }: CreateGroupFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [organisation, setOrganisation] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/group\", { name, organisation });\n\n      setName(\"\");\n      setMessage(\"Group created.\");\n      addGroup(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating group.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"400px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n              <th>Organisation</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n              <td>\n                <select name=\"organisation\" onChange={e => setOrganisation(e.target.value)}>\n                  <option value=\"\">&lt;Select organisation&gt;</option>\n                  { organisations.map(s => <OrganisationOption key={s.id} organisation={s} />)}\n                </select>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3 || organisation === \"\"}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst OrganisationOption = ({ organisation }: { organisation: OrganisationJsonView }) => {\n  return (\n    <option value={organisation.id}>{organisation.name}</option>\n  );\n};\n\ninterface CreateGroupFormProps {\n  api: AxiosInstance,\n  addGroup: (response: HttpResponse<GroupJsonView>) => any,\n  organisations: OrganisationJsonView[]\n}\n","import React from \"react\";\nimport { toGroupId } from \"eco-rewards-hub/dist/src/group/Group\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { GroupJsonView } from \"eco-rewards-hub\";\n\nexport const GroupsTable = ({ api, groups, links, removeGroups }: GroupsTableProps) => {\n  const rows = groups.map(o => ({\n    id: o.id!,\n    numeric_id: toGroupId(o.id!),\n    name: o.name,\n    organisation: links[o.organisation].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Organisation\",\n    selector: \"organisation\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeGroups}/>\n  );\n};\n\ninterface GroupsTableProps {\n  api: AxiosInstance,\n  groups: GroupJsonView[],\n  links: Record<string, any>,\n  removeGroups: (groups: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateGroupForm } from \"./CreateGroupForm/CreateGroupForm\";\nimport { GroupsTable } from \"./GroupsTable/GroupsTable\";\nimport { HttpResponse, GroupJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const GroupsPage = ({api}: GroupsPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [groups, organisations] = await Promise.all([\n        api.get(\"/groups\").then(r => r.data),\n        api.get(\"/organisations\").then(r => r.data)\n      ]);\n\n      setApiData({ groups, organisations });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addGroup = (response: HttpResponse<GroupJsonView>) => {\n    apiData.groups.data.push(response.data);\n    apiData.groups.links = { ...response.links, ...apiData.groups.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeGroups = (removed: Row[]) => {\n    apiData.groups.data = apiData.groups.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Groups</h1>\n      <p className=\"mb-4\">Create and manage groups.</p>\n      <CreateGroupForm\n        api={api}\n        addGroup={addGroup}\n        organisations={apiData ? apiData.organisations.data : []}/>\n      <GroupsTable\n        api={api}\n        removeGroups={removeGroups}\n        groups={apiData ? apiData.groups.data : []}\n        links={apiData ? apiData.groups.links : {}}/>\n    </div>\n  );\n};\n\ninterface GroupsPageProps {\n  api: AxiosInstance\n}\n","import React from \"react\";\n\nexport const TransportModeList = ({ defaultTransportMode, setDefaultTransportMode }: TransportModeListProps) => {\n  const modes = [\n    \"Car share\",\n    \"Electric car\",\n    \"Taxi\",\n    \"Park and ride\",\n    \"Tram\",\n    \"Bus\",\n    \"Train\",\n    \"Cycling\",\n    \"Walk\",\n    \"Work from home\"\n  ];\n\n  return (\n    <select className=\"custom-select custom-select-sm form-control form-control-sm\"\n            name=\"defaultTransportMode\"\n            defaultValue={defaultTransportMode}\n            onChange={e => setDefaultTransportMode(e.target.value)}>\n      <option value=\"\">Select transport mode</option>\n      { modes.map((m, i) => <option key={i} value={m.toLowerCase()}>{m}</option>)}\n    </select>\n  );\n};\n\nexport interface TransportModeListProps {\n  defaultTransportMode: string,\n  setDefaultTransportMode: (mode: string) => any\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, MemberJsonView, GroupJsonView } from \"eco-rewards-hub\";\nimport { TransportModeList } from \"../../../TransportModeList/TransportModeList\";\n\nexport const CreateMemberForm = ({ api, addMembers, groups }: CreateMemberFormProps) => {\n  const [group, setGroup] = useState(\"\");\n  const [defaultTransportMode, setDefaultTransportMode] = useState(\"\");\n  const [defaultDistance, setDefaultDistance] = useState(\"0.00\");\n  const [quantity, setQuantity] = useState(\"10\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/members\", { group, defaultTransportMode, defaultDistance: +defaultDistance, quantity: +quantity });\n\n      setDefaultDistance(\"0.00\");\n      setMessage(quantity + \" new members created.\");\n      setQuantity(\"10\");\n      addMembers(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating members.\")\n    }\n  };\n\n  const canSubmit = group.length > 2 && +quantity > 0;\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"650px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Group</th>\n              <th>Default Mode</th>\n              <th>Default Distance</th>\n              <th>Quantity</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                <select name=\"group\" onChange={e => setGroup(e.target.value)}>\n                  <option value=\"\">&lt;Select group&gt;</option>\n                  { groups.map(s => <option value={s.id}>{s.name}</option>)}\n                </select>\n              </td>\n              <td>\n                <TransportModeList defaultTransportMode={defaultTransportMode} setDefaultTransportMode={setDefaultTransportMode} />\n              </td>\n              <td><input type=\"text\" name=\"defaultDistance\" value={defaultDistance} onChange={e => setDefaultDistance(e.target.value)} className=\"col-12\"/></td>\n              <td><input type=\"text\" name=\"quantity\" value={quantity} onChange={e => setQuantity(e.target.value)} className=\"col-12\"/></td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={!canSubmit}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateMemberFormProps {\n  api: AxiosInstance,\n  addMembers: (response: HttpResponse<MemberJsonView>) => any,\n  groups: GroupJsonView[]\n}\n","import React from \"react\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { MemberJsonView } from \"eco-rewards-hub\";\n\nexport const MembersTable = ({ api, members, links, removeMembers }: MembersTableProps) => {\n  const rows = members.map(o => ({\n    id: o.id!,\n    numeric_id: o.id!.substr(8),\n    name: links[o.group].name,\n    defaultTransportMode: o.defaultTransportMode,\n    defaultDistance: o.defaultDistance + \" miles\",\n    carbonSaving: o.carbonSaving + \"kg\",\n    rewards: o.rewards\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"180px\"\n  },{\n    name: \"Group\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Default Mode\",\n    selector: \"defaultTransportMode\",\n    sortable: false\n  },{\n    name: \"Default Distance\",\n    selector: \"defaultDistance\",\n    sortable: true\n  },{\n    name: \"Rewards\",\n    selector: \"rewards\",\n    sortable: true\n  },{\n    name: \"Carbon Saving\",\n    selector: \"carbonSaving\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeMembers}/>\n  );\n};\n\ninterface MembersTableProps {\n  api: AxiosInstance,\n  members: MemberJsonView[],\n  links: Record<string, any>,\n  removeMembers: (members: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateMemberForm } from \"./CreateMemberForm/CreateMemberForm\";\nimport { MembersTable } from \"./MembersTable/MembersTable\";\nimport { HttpResponse, MemberJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const MembersPage = ({api}: MembersPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [members, groups] = await Promise.all([\n        api.get(\"/members\").then(r => r.data),\n        api.get(\"/groups\").then(r => r.data)\n      ]);\n\n      setApiData({ members, groups });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addMembers = (response: HttpResponse<MemberJsonView>) => {\n    apiData.members.data = apiData.members.data.concat(response.data);\n    apiData.members.links = { ...response.links, ...apiData.members.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeMembers = (removed: Row[]) => {\n    apiData.members.data = apiData.members.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Members</h1>\n      <p className=\"mb-4\">Create and manage members.</p>\n      <CreateMemberForm\n        api={api}\n        addMembers={addMembers}\n        groups={apiData ? apiData.groups.data : []}/>\n      <MembersTable\n        api={api}\n        removeMembers={removeMembers}\n        members={apiData ? apiData.members.data : []}\n        links={apiData ? apiData.members.links : {}}/>\n    </div>\n  );\n};\n\ninterface MembersPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useRef, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\n\nexport const CreateJourneyForm = ({ api, onJourneysUploaded }: CreateJourneyFormProps) => {\n  const file: any = useRef(null);\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!file.current.files[0]) {\n      return setMessage(\"Please select a CSV file\");\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file.current.files[0] as any, \"upload.csv\");\n\n      const headers = { \"Content-Type\": \"multipart/form-data\" };\n      const errors = await api.post(\"/journey\", formData, { headers }).then(r => r.data.data.errors);\n      const newMessage = errors.length === 0 ? \"Upload successful\" : errors.join(\"\\n\");\n\n      setMessage(newMessage);\n      onJourneysUploaded();\n    }\n    catch (e) {\n      setMessage(\"Error while uploading journeys.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Upload</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"650px\" }}>\n          <p>{message}</p>\n          <input type=\"file\" name=\"uploadFile\" ref={file}/>\n          <button style={{ width: \"100px\", marginTop: \"20px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\">\n            Upload\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateJourneyFormProps {\n  api: AxiosInstance,\n  onJourneysUploaded: () => any\n}\n","import React from \"react\";\nimport { Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { JourneyJsonView } from \"eco-rewards-hub\";\n\nexport const JourneysTable = ({ api, journeys }: JourneysTableProps) => {\n  const rows = journeys.map(o => ({\n    ...o,\n    name: o.source,\n    id: o.id + \"\",\n    numeric_id: o.id!,\n    memberId: o.memberId.substr(8),\n    processed: o.processed === null ? \"Pending\" : o.processed,\n    carbonSaving: o.carbonSaving === null ? \"-\" : o.carbonSaving + \"kg\",\n    rewardsEarned: o.rewardsEarned === null ? \"-\" : o.rewardsEarned\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"80px\"\n  },{\n    name: \"Source\",\n    selector: \"source\",\n    sortable: true\n  },{\n    name: \"Uploaded\",\n    selector: \"uploaded\",\n    sortable: true\n  },{\n    name: \"Processed\",\n    selector: \"processed\",\n    sortable: true\n  },{\n    name: \"Travel Date\",\n    selector: \"travelDate\",\n    sortable: true\n  },{\n    name: \"Member ID\",\n    selector: \"memberId\",\n    sortable: true\n  },{\n    name: \"Distance\",\n    selector: \"distance\",\n    sortable: true\n  },{\n    name: \"Mode\",\n    selector: \"mode\",\n    sortable: true\n  },{\n    name: \"Rewards Earned\",\n    selector: \"rewardsEarned\",\n    sortable: true\n  },{\n    name: \"Carbon Saving\",\n    selector: \"carbonSaving\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api}/>\n  );\n};\n\ninterface JourneysTableProps {\n  api: AxiosInstance,\n  journeys: JourneyJsonView[]\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateJourneyForm } from \"./CreateJourneyForm/CreateJourneyForm\";\nimport { JourneysTable } from \"./JourneysTable/JourneysTable\";\n\nexport const JourneysPage = ({api}: JourneysPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const journeys = await api.get(\"/journeys\").then(r => r.data);\n\n      setApiData({ journeys });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addJourneys = () => {\n    setApiData(null);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Journeys</h1>\n      <p className=\"mb-4\">View and upload member journeys.</p>\n      <CreateJourneyForm\n        api={api}\n        onJourneysUploaded={addJourneys}/>\n      <JourneysTable\n        api={api}\n        journeys={apiData ? apiData.journeys.data : []}/>\n    </div>\n  );\n};\n\ninterface JourneysPageProps {\n  api: AxiosInstance\n}\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { DashboardPage } from './DashboardPage/DashboardPage';\nimport { SideNavigation } from \"./SideNavigation/SideNavigation\";\nimport { TopBar } from \"./TopBar/TopBar\";\nimport { Footer } from \"./Footer/Footer\";\nimport { Authentication } from \"../Authentication\";\nimport { SchemesPage } from \"./SchemesPage/SchemesPage\";\nimport { OrganisationsPage } from \"./OrganisationsPage/OrganisationsPage\";\nimport { GroupsPage } from './GroupsPage/GroupsPage';\nimport { MembersPage } from \"./MembersPage/MembersPage\";\nimport { JourneysPage } from \"./JourneysPage/JourneysPage\";\n\nexport const AuthenticatedPage = ({ auth }: AuthenticatedPageProps) => {\n  return (\n    <div id=\"wrapper\">\n      <SideNavigation/>\n      <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n        <div id=\"content\">\n          <TopBar auth={auth}/>\n          <HashRouter>\n            <Switch>\n              <Route path=\"/schemes\">\n                <SchemesPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/organisations\">\n                <OrganisationsPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/groups\">\n                <GroupsPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/members\">\n                <MembersPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/journeys\">\n                <JourneysPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/\">\n                <DashboardPage />\n              </Route>\n            </Switch>\n          </HashRouter>\n        </div>\n        <Footer/>\n      </div>\n    </div>\n  );\n};\n\ninterface AuthenticatedPageProps {\n  auth: Authentication;\n}\n","import { Redirect, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nexport const PrivateRoute = ({ children, auth, ...rest }: any) => {\n  return (\n    <Route\n      {...rest}\n      render={ ({ location }) =>\n        auth.isAuthenticated ? children : <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n      }\n    />\n  );\n};\n","import { useCookies } from \"react-cookie\";\nimport Axios, { AxiosInstance } from \"axios\";\n\nexport class Authentication {\n  private readonly cookie: AuthenticationCookie;\n  private readonly setCookie: (name: string, value: any) => void;\n  private readonly removeCookie: (name: string) => void;\n  private readonly authenticatedApi: AxiosInstance;\n\n  constructor(\n    private readonly api: AxiosInstance\n  ) {\n    const [cookie, setCookie, removeCookie] = useCookies([\"auth\"]);\n\n    this.cookie = cookie.auth;\n    this.setCookie = setCookie;\n    this.removeCookie = removeCookie;\n    this.authenticatedApi = Axios.create({\n      baseURL: api.defaults.baseURL,\n      headers: {\n        authorization: \"Basic \" + (this.cookie && this.cookie.token)\n      }\n    });\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.cookie && this.cookie.token !== undefined;\n  }\n\n  public async login(username: string, password: string): Promise<void> {\n    try {\n      const response = await this.api.post(\"/login\", { username, password });\n\n      this.setCookie(\"auth\", response.data.data);\n    }\n    catch (e) {\n      console.error(e);\n    }\n  }\n\n  public logout(): void {\n    this.removeCookie(\"auth\");\n  }\n\n  public getAuthenticatedApi() {\n    return this.authenticatedApi;\n  }\n\n  public getName() {\n    return this.cookie.name;\n  }\n}\n\ninterface AuthenticationCookie {\n  token?: string\n  name?: string\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { TransportModeList } from \"../TransportModeList/TransportModeList\";\nimport { GroupJsonView } from \"eco-rewards-hub\";\nimport \"./RegistrationPage.css\";\n\nexport const RegistrationPage = ({ api }: RegistrationPageProps) => {\n  const [success, setSuccess] = useState(false);\n  const [registrationError, setRegistrationError] = useState(\"\");\n  const [smartcard, setSmartcard] = useState(\"\");\n  const [defaultTransportMode, setDefaultTransportMode] = useState(\"\");\n  const [defaultDistance, setDefaultDistance] = useState(1.0);\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n\n  useEffect(() => {\n    async function fetchGroups() {\n      const response = await api.get(\"/groups\");\n\n      setGroups(response.data.data);\n    }\n\n    if (groups.length === 0) {\n      fetchGroups();\n    }\n  }, [api, groups]);\n\n  const register = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      await api.post(\"/member\", { smartcard, defaultTransportMode, defaultDistance, group });\n      setSuccess(true);\n    }\n    catch (err) {\n      setRegistrationError(\"Unable to register, please try again.\");\n    }\n  };\n\n  const canSubmit = smartcard.length >= 10 && defaultTransportMode !== \"\" && defaultDistance > 0 && group !== \"\";\n  const form = () => {\n    return (\n      <>\n        <div className=\"text-center\">\n          <h1 className=\"h4 text-gray-900 mb-4\">Register</h1>\n        </div>\n        <form className=\"user\">\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputSmartcard\"\n                   aria-describedby=\"smartcardHelp\" placeholder=\"Enter Smartcard number...\" required\n                   onChange={e => setSmartcard(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TransportModeList defaultTransportMode={defaultTransportMode} setDefaultTransportMode={setDefaultTransportMode} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputDistance\"\n                   aria-describedby=\"distanceHelp\" placeholder=\"Enter distance in miles... \" required\n                   onChange={e => setDefaultDistance(+e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <select className=\"custom-select form-control form-control-sm\" name=\"group\" onChange={e => setGroup(e.target.value)}>\n              <option value=\"\">&lt;Select group&gt;</option>\n              { groups.map((s: GroupJsonView) => <option value={s.id}>{s.name}</option>)}\n            </select>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-user btn-block\" onClick={register} disabled={!canSubmit}>\n            Register\n          </button>\n        </form>\n        { registrationError && (<hr />) }\n        {registrationError}\n      </>\n    );\n  };\n\n  const successPage = () => {\n    return (\n      <>\n        <div className=\"text-center\">\n          <h1 className=\"h4 text-gray-900 mb-4\">Success</h1>\n        </div>\n        <p>\n          Thank you.\n        </p>\n        <p>\n          Your smartcard has been registered. Using your smartcard on public transport will now add points and carbon savings to your account.\n        </p>\n        <br/>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    { success ? successPage() : form() }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface RegistrationPageProps {\n  api: AxiosInstance\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"startbootstrap-sb-admin-2/css/sb-admin-2.min.css\"\nimport \"startbootstrap-sb-admin-2/vendor/fontawesome-free/css/all.min.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from \"./LoginPage/LoginPage\";\nimport { AuthenticatedPage } from './AuthenticatedPage/AuthenticatedPage';\nimport { PrivateRoute } from './PrivateRoute/PrivateRoute';\nimport { Authentication } from \"./Authentication\";\nimport Axios from 'axios';\nimport { RegistrationPage } from \"./RegistrationPage/RegistrationPage\";\n\nexport const App = () => {\n  const api = Axios.create({ baseURL: \"https://api.ecorewards.co.uk\" });\n  const auth = new Authentication(api);\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage auth={auth}/>\n        </Route>\n        <Route path=\"/register\">\n          <RegistrationPage api={api}/>\n        </Route>\n        <PrivateRoute auth={auth} path=\"/\">\n          <AuthenticatedPage auth={auth}/>\n        </PrivateRoute>\n      </Switch>\n    </HashRouter>\n  );\n};\n\n"],"sourceRoot":""}
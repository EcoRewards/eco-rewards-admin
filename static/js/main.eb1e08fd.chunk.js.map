{"version":3,"sources":["LoginPage/LoginPage.tsx","AuthenticatedPage/DashboardPage/DashboardChart.tsx","AuthenticatedPage/DashboardPage/ReportScopeSelect.tsx","AuthenticatedPage/DashboardPage/DateSelector.tsx","AuthenticatedPage/DashboardPage/DashboardPage.tsx","AuthenticatedPage/SideNavigation/SideNavigation.tsx","AuthenticatedPage/TopBar/TopBar.tsx","AuthenticatedPage/Footer/Footer.tsx","AuthenticatedPage/SchemesPage/CreateSchemeForm/CreateSchemeForm.tsx","AuthenticatedPage/Table/Table.tsx","AuthenticatedPage/SchemesPage/SchemesTable/SchemesTable.tsx","AuthenticatedPage/SchemesPage/SchemesPage.tsx","AuthenticatedPage/OrganisationsPage/CreateOrganisationForm/CreateOrganisationForm.tsx","AuthenticatedPage/OrganisationsPage/OrganisationsTable/OrganisationsTable.tsx","AuthenticatedPage/OrganisationsPage/OrganisationsPage.tsx","AuthenticatedPage/GroupsPage/CreateGroupForm/CreateGroupForm.tsx","AuthenticatedPage/GroupsPage/GroupsTable/GroupsTable.tsx","AuthenticatedPage/GroupsPage/GroupsPage.tsx","TransportModeList/TransportModeList.tsx","AuthenticatedPage/MembersPage/CreateMemberForm/CreateMemberForm.tsx","AuthenticatedPage/MembersPage/MembersTable/MembersTable.tsx","AuthenticatedPage/MembersPage/MembersPage.tsx","AuthenticatedPage/JourneysPage/CreateJourneyForm/CreateJourneyForm.tsx","AuthenticatedPage/JourneysPage/JourneysTable/JourneysTable.tsx","AuthenticatedPage/JourneysPage/JourneysPage.tsx","AuthenticatedPage/DeviceStatusPage/DeviceStatusTable/DeviceStatusTable.tsx","AuthenticatedPage/DeviceStatusPage/DeviceStatusPage.tsx","AuthenticatedPage/AuthenticatedPage.tsx","PrivateRoute/PrivateRoute.tsx","Authentication.ts","RegistrationPage/GroupSelect/GroupSelect.tsx","RegistrationPage/RegistrationPage.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["LoginPage","auth","history","useHistory","from","useLocation","state","pathname","useState","loginError","setLoginError","username","setUsername","password","setPassword","rememberMe","setRememberMe","login","e","a","preventDefault","isAuthenticated","replace","className","type","id","aria-describedby","placeholder","onChange","target","value","checked","htmlFor","onClick","colours","DashboardChart","title","names","data","bars","map","name","i","key","dataKey","fill","length","width","height","margin","top","right","left","bottom","strokeDasharray","ReportScopeSelect","groups","links","scheme","setScheme","schemes","Object","keys","filter","k","startsWith","organisations","setter","s","disabled","o","DateSelector","today","LocalDate","now","dates","minusDays","withDayOfMonth","month","minusMonths","plusMonths","entries","to","toJSON","charAt","slice","toLowerCase","DashboardPage","api","scope","setScope","setNames","carbonSaving","setCarbonSaving","rewardPoints","setRewardPoints","distance","setDistance","setGroups","setLinks","setDates","useEffect","get","response","fetchGroups","dateRange","split","join","newNames","row","date","totalCarbonSaving","totalDistance","totalRewardsEarned","values","fetchApiData","SideNavigation","exact","activeClassName","TopBar","getName","href","logout","role","data-toggle","aria-haspopup","aria-expanded","Footer","CreateSchemeForm","addScheme","setName","vacClientId","setVacClientId","message","setMessage","onSubmit","post","style","maxWidth","Table","rows","columns","removeRows","editRow","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","handleRowSelected","useCallback","contextActions","useMemo","handleDelete","window","confirm","r","Promise","all","delete","deleteButton","editButton","filterText","setFilterText","resetPaginationToggle","filteredItems","item","includes","subHeaderComponentMemo","onFilter","pagination","paginationResetDefaultPage","paginationPerPage","subHeader","subHeaderComponent","selectableRows","undefined","onSelectedRowsChange","clearSelectedRows","FilterComponent","onClear","TextField","styled","input","SchemesTable","removeSchemes","numeric_id","toSchemeId","selector","sortable","SchemesPage","setSchemes","fetchSchemes","push","removed","s1","some","s2","CreateOrganisationForm","addOrganisation","SchemeOption","OrganisationsTable","removeOrganisations","toOrganisationId","OrganisationsPage","apiData","setApiData","then","r1","r2","CreateGroupForm","addGroup","organisation","setOrganisation","OrganisationOption","GroupsTable","removeGroups","toGroupId","GroupsPage","TransportModeList","defaultTransportMode","setDefaultTransportMode","defaultValue","m","CreateMemberForm","addMembers","group","setGroup","defaultDistance","setDefaultDistance","quantity","setQuantity","canSubmit","Modal","setAppElement","customStyles","content","marginRight","transform","border","background","overlay","zIndex","backgroundColor","MembersTable","members","removeMembers","substr","previousTransportMode","totalMiles","rewards","React","editMember","setEditMember","setPreviousTransportMode","closeModal","newProps","put","member","find","assign","isOpen","onRequestClose","contentLabel","float","MembersPage","onExportMembers","headers","document","createElement","display","body","appendChild","URL","createObjectURL","Blob","setAttribute","click","revokeObjectURL","removeChild","concat","CreateJourneyForm","onJourneysUploaded","file","useRef","current","files","formData","FormData","append","errors","newMessage","ref","marginTop","JourneysTable","journeys","memberId","uploaded","Date","toLocaleString","travelDate","processed","rewardsEarned","JourneysPage","DeviceStatusTable","statuses","deviceId","received","status","DeviceStatusPage","AuthenticatedPage","path","getAuthenticatedApi","PrivateRoute","children","rest","render","location","Authentication","cookie","setCookie","removeCookie","authenticatedApi","useCookies","this","Axios","create","baseURL","defaults","authorization","token","console","error","GroupSelect","selectableGroups","g","RegistrationPage","success","setSuccess","registrationError","setRegistrationError","smartcard","setSmartcard","register","pattern","minLength","maxLength","required","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb1e08fd.chunk.js","sourcesContent":["import React, { FormEvent, useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { Authentication } from \"../Authentication\";\nimport {\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nexport const LoginPage = ({ auth }: LoginPageProps) => {\n  const history = useHistory();\n  const location = useLocation<any>();\n  const { from } = location.state || { from: { pathname: \"/\" } };\n  const [loginError, setLoginError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(true);\n\n  const login = async (e: FormEvent) => {\n    e.preventDefault();\n\n    await auth.login(username, password);\n\n    if (auth.isAuthenticated) {\n      history.replace(from);\n    }\n    else {\n      setLoginError(\"Unable to login, please try again.\");\n    }\n  };\n\n  if (auth.isAuthenticated) {\n    history.replace(from);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Login</h1>\n                    </div>\n                    <form className=\"user\">\n                      <div className=\"form-group\">\n                        <input type=\"email\" className=\"form-control form-control-user\" id=\"exampleInputEmail\"\n                               aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\"\n                               onChange={e => setUsername(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <input type=\"password\" className=\"form-control form-control-user\" id=\"exampleInputPassword\"\n                               placeholder=\"Password\" onChange={e => setPassword(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox small\">\n                          <input type=\"checkbox\" checked={rememberMe} onChange={() => setRememberMe(!rememberMe)} className=\"custom-control-input\" id=\"customCheck\"/>\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck\">Remember Me</label>\n                        </div>\n                      </div>\n                      <button className=\"btn btn-primary btn-user btn-block\" onClick={login}>\n                        Login\n                      </button>\n                    </form>\n                    { loginError && (<hr />) }\n                    {loginError}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface LoginPageProps {\n  auth: Authentication\n}\n","import { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\";\nimport React from \"react\";\n\nconst colours = [\"#ffc658\", \"#8884d8\", \"#82ca9d\"];\n\nexport const DashboardChart = ({ title, names, data }: DashboardChartProps) => {\n  const bars = names.map((name, i) => <Bar key={i} dataKey={name} fill={colours[i % colours.length]} />);\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">{ title }</h6>\n      </div>\n      <div className=\"card-body\">\n        {\n          !data || data.length === 0\n            ? <p>No data.</p>\n            : <ResponsiveContainer width=\"99%\" height={500}>\n                <BarChart data={data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  { bars }\n                </BarChart>\n            </ResponsiveContainer>\n        }\n      </div>\n    </div>\n\n  )\n};\n\nexport interface DashboardChartProps {\n  title: string,\n  names: string[],\n  data: any[]\n}\n","import { GroupJsonView, OrganisationJsonView, SchemeJsonView } from \"eco-rewards-hub\";\nimport React, { Dispatch, useState } from \"react\";\n\nexport const ReportScopeSelect = ({ groups, links, onChange }: ReportScopeSelectProps) => {\n  const [scheme, setScheme] = useState(\"\");\n\n  const schemes: SchemeJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/scheme/\") && k !== \"/scheme/1\")\n    .map(k => links[k]);\n\n  const organisations: OrganisationJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/organisation/\") && links[k].scheme === scheme)\n    .map(k => links[k]);\n\n  const bubbleChange = (setter: Dispatch<string>, value: string) => {\n    setter(value);\n    onChange(value);\n  };\n\n  return (\n    <div className=\"group-select\">\n      <select className=\"col-3 custom-select form-control form-control-sm mr-3\" name=\"scheme\" onChange={e => bubbleChange(setScheme, e.target.value)}>\n        <option value=\"\">All schemes</option>\n        { schemes.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n      </select>\n      <select disabled={organisations.length === 0} className=\"col-3 custom-select form-control form-control-sm\" name=\"organisation\" onChange={e => onChange(e.target.value || scheme)}>\n        <option value=\"\">All organisations</option>\n        { organisations.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n      </select>\n    </div>\n  );\n};\n\nexport interface ReportScopeSelectProps {\n  groups: GroupJsonView[],\n  links: Record<string, any>,\n  onChange: (selected: string) => any\n}\n","import React from \"react\";\nimport { LocalDate } from \"@js-joda/core\";\n\nexport const DateSelector = ({ onChange }: DateSelectorProps) => {\n  const today = LocalDate.now();\n  const dates: Record<string, [LocalDate, LocalDate]> = {\n    \"Last 7 days\": [today.minusDays(7), today],\n    \"Last 30 days\": [today.minusDays(30), today],\n    \"This month\": [today.withDayOfMonth(1), today]\n  };\n\n  for (let i = 1; i <= 6; i++) {\n    const month = today.minusMonths(i);\n    dates[month.month().name()] = [month.withDayOfMonth(1), month.plusMonths(1).withDayOfMonth(1).minusDays(1)]\n  }\n\n  return (\n    <select className=\"custom-select form-control form-control-sm\" onChange={e => onChange(e.target.value)}>\n      { Object.entries(dates).map(([month, [from, to]]) => <option key={month} value={from.toJSON() + \",\" + to.toJSON()}>{ month.charAt(0) + month.slice(1).toLowerCase() }</option>)}\n    </select>\n  );\n};\n\nexport interface DateSelectorProps {\n  onChange: (dates: string) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { DashboardChart } from \"./DashboardChart\";\nimport { ReportScopeSelect } from \"./ReportScopeSelect\";\nimport { DateSelector } from \"./DateSelector\";\n\nexport const DashboardPage = ({ api }: DashboardPageProps) => {\n  const [scope, setScope] = useState(\"/global/0/report\");\n  const [names, setNames] = useState();\n  const [carbonSaving, setCarbonSaving] = useState();\n  const [rewardPoints, setRewardPoints] = useState();\n  const [distance, setDistance] = useState();\n  const [groups, setGroups] = useState([]);\n  const [links, setLinks] = useState({});\n  const [dates, setDates] = useState();\n\n  useEffect(() => {\n    async function fetchGroups() {\n      const response = await api.get(\"/groups\");\n\n      setGroups(response.data.data);\n      setLinks(response.data.links);\n    }\n\n    if (groups.length === 0) {\n      fetchGroups();\n    }\n  }, [api, groups]);\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const dateRange = dates ? \"?from=\" + dates.split(\",\").join(\"&to=\") : \"\";\n      const response = await api.get(scope + dateRange);\n\n      const carbonSaving = {} as Record<string, Record<string, number>>;\n      const rewardPoints = {} as Record<string, Record<string, number>>;\n      const distance = {} as Record<string, Record<string, number>>;\n      const newNames = {} as Record<string, true>;\n\n      for (const row of response.data.data) {\n        carbonSaving[row.date] = carbonSaving[row.date] || { date: row.date };\n        carbonSaving[row.date][row.name] = row.totalCarbonSaving;\n        distance[row.date] = distance[row.date] || { date: row.date };\n        distance[row.date][row.name] = row.totalDistance;\n        rewardPoints[row.date] = rewardPoints[row.date] || { date: row.date };\n        rewardPoints[row.date][row.name] = row.totalRewardsEarned;\n        newNames[row.name] = true;\n      }\n\n      setNames(Object.keys(newNames));\n      setCarbonSaving(Object.values(carbonSaving));\n      setDistance(Object.values(distance));\n      setRewardPoints(Object.values(rewardPoints));\n    }\n\n    if (!names) {\n      fetchApiData();\n    }\n  }, [api, names, scope, dates]);\n\n  const onScopeChange = (scope: string) => {\n    setScope(scope ? scope + \"/report\" : \"/global/0/report\");\n    setNames(null);\n  };\n\n  const onDateChange = (dates: string) => {\n    setDates(dates);\n    setNames(null);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Dashboard</h1>\n      <div className=\"row\">\n        <div className=\"col-9\">\n          <ReportScopeSelect groups={groups} links={links} onChange={onScopeChange}/>\n        </div>\n        <div className=\"col-3\">\n          <DateSelector onChange={onDateChange}/>\n        </div>\n      </div>\n      { !names\n        ? <p>Loading</p>\n        : <>\n            <DashboardChart key=\"rewards\" title=\"Rewards Earned\" data={rewardPoints} names={names}/>\n            <DashboardChart key=\"carbon\" title=\"Carbon Saving\" data={carbonSaving} names={names}/>\n            <DashboardChart key=\"distance\" title=\"Distance\" data={distance} names={names}/>\n          </>\n      }\n    </div>\n  );\n};\n\nexport interface DashboardPageProps {\n  api: AxiosInstance\n}\n\ninterface ReportRow {\n  date: string,\n  name: string,\n  totalCarbonSaving: number,\n  totalDistance: number,\n  totalRewardsEarned: number\n}\n","import React from 'react';\nimport \"./SideNavigation.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const SideNavigation = () => {\n  return (\n    <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n      <NavLink className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/\">\n        <div className=\"sidebar-brand-icon rotate-n-15\">\n          <i className=\"fas fa-leaf\"></i>\n        </div>\n        <div className=\"sidebar-brand-text mx-3\">Eco Rewards Hub Admin</div>\n      </NavLink>\n\n      <hr className=\"sidebar-divider my-0\"/>\n\n      <li className=\"nav-item\">\n        <NavLink exact={true} activeClassName=\"active\" className=\"nav-link\" to=\"/\">\n          <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n          <span>Dashboard</span></NavLink>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Manage\n      </div>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/schemes\">\n          <i className=\"fas fa-fw fa-city\"></i>\n          <span>Schemes</span></NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/organisations\">\n          <i className=\"fas fa-fw fa-school\"></i>\n          <span>Organisations</span>\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/groups\">\n          <i className=\"fas fa-fw fa-users\"></i>\n          <span>Groups</span>\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/members\">\n          <i className=\"fas fa-fw fa-user\"></i>\n          <span>Members</span></NavLink>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Reports\n      </div>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/journeys\">\n          <i className=\"fas fa-fw fa-bus\"></i>\n          <span>Journeys</span></NavLink>\n      </li>\n\n        <li className=\"nav-item\">\n            <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/devices\">\n            <i className=\"fas fa-fw fa-bus\"></i>\n            <span>Device Status</span></NavLink>\n        </li>\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Authentication } from \"../../Authentication\";\n\nexport const TopBar = ({ auth }: TopBarProps) => {\n\n  const logout = (e: any) => {\n    e.preventDefault();\n\n    auth.logout();\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n      <span className=\"text-gray-600 small\">Welcome back, { auth.getName() }</span>\n\n      <ul className=\"navbar-nav ml-auto\">\n\n        <li className=\"nav-item dropdown no-arrow\">\n          <a className=\"dropdown-toggle\" href=\"/logout\" onClick={logout} id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Logout</span>\n            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          </a>\n        </li>\n\n      </ul>\n\n    </nav>\n\n  );\n};\n\ninterface TopBarProps {\n  auth: Authentication;\n}\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"sticky-footer bg-white\">\n    <div className=\"container my-auto\">\n      <div className=\"copyright text-center my-auto\">\n        <span>Copyright &copy; Eco Rewards</span>\n      </div>\n    </div>\n  </footer>\n  );\n};\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const CreateSchemeForm = ({ api, addScheme }: CreateSchemeFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [vacClientId, setVacClientId] = useState(\"0\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/scheme\", { name, vacClientId: +vacClientId });\n\n      setName(\"\");\n      setVacClientId(\"0\");\n      setMessage(\"Scheme created.\");\n      addScheme(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating scheme.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"450px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n              <th>VAC Client ID</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n              <td><input type=\"text\" name=\"vacClientId\" value={vacClientId} onChange={e => setVacClientId(e.target.value)} className=\"col-12\"/></td>\n            </tr>\n            </tbody>\n          </table>\n          <button  style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateSchemeFormProps {\n  api: AxiosInstance,\n  addScheme: (response: HttpResponse<SchemeJsonView>) => any\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport DataTable, { IDataTableColumn } from \"react-data-table-component\";\nimport styled from \"styled-components\";\nimport \"./Table.css\";\nimport { AxiosInstance } from \"axios\";\n\nexport const Table = <T extends Row>({ rows, columns, removeRows, editRow, api }: TableProps<T>) => {\n  const [selectedRows, setSelectedRows] = useState([] as T[]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n\n  const handleRowSelected = useCallback(state => {\n    setSelectedRows(state.selectedRows);\n  }, []);\n\n  const contextActions = useMemo(() => {\n    const handleDelete = async () => {\n\n      if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n        setToggleCleared(!toggleCleared);\n\n        await Promise.all(selectedRows.map(r => api.delete(r.id)));\n\n        removeRows!(selectedRows);\n      }\n    };\n\n    const deleteButton = <button className=\"btn btn-danger\" key=\"delete\" onClick={handleDelete}>Delete</button>;\n    const editButton = editRow && selectedRows.length === 1\n      ? <button className=\"btn btn-primary\" key=\"edit\" onClick={() => editRow(selectedRows[0])}>Edit</button>\n      : null;\n\n    return <>{editButton} {deleteButton}</>;\n  }, [selectedRows, toggleCleared, api, removeRows, editRow]);\n\n  const [filterText, setFilterText] = useState('');\n  const [resetPaginationToggle] = useState(false);\n  const filteredItems = rows.filter(item => item.name && item.name.includes(filterText));\n  const subHeaderComponentMemo = useMemo(() => {\n    return <FilterComponent onFilter={(e: any) => setFilterText(e.target.value)} filterText={filterText} />;\n  }, [filterText]);\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Edit</h6>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <DataTable\n            columns={columns}\n            data={filteredItems}\n            pagination\n            paginationResetDefaultPage={resetPaginationToggle}\n            paginationPerPage={30}\n            subHeader\n            subHeaderComponent={subHeaderComponentMemo}\n            selectableRows\n            contextActions={removeRows ? contextActions : undefined}\n            onSelectedRowsChange={handleRowSelected}\n            clearSelectedRows={toggleCleared}\n          />\n        </div>\n      </div>\n    </div>\n  )\n};\n\ninterface TableProps<T extends Row> {\n  rows: T[],\n  columns: IDataTableColumn<T>[],\n  removeRows?: (rows: Row[]) => any,\n  editRow?: (row: T) => any,\n  api: AxiosInstance\n}\n\nexport interface Row {\n  id: string,\n  name: string\n}\n\nconst FilterComponent = ({ filterText, onFilter, onClear }: any) => (\n  <TextField id=\"search\" type=\"text\" placeholder=\"Filter By Name\" value={filterText} onChange={onFilter} />\n);\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport { toSchemeId } from \"eco-rewards-hub/dist/src/scheme/Scheme\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const SchemesTable = ({ api, schemes, removeSchemes }: SchemesTableProps) => {\n  const rows = schemes.map(s => ({ numeric_id: toSchemeId(s.id!), ...s }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"VAC Client ID\",\n    selector: \"vacClientId\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} removeRows={removeSchemes} api={api}/>\n  );\n};\n\ninterface SchemesTableProps {\n  api: AxiosInstance,\n  schemes: (SchemeJsonView & { id: string })[],\n  removeSchemes: (schemes: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateSchemeForm } from \"./CreateSchemeForm/CreateSchemeForm\";\nimport { SchemesTable } from \"./SchemesTable/SchemesTable\";\nimport { HttpResponse, SchemeJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const SchemesPage = ({api}: SchemesPageProps) => {\n  const [schemes, setSchemes] = useState();\n  const [links, setLinks] = useState({});\n\n  useEffect(() => {\n    async function fetchSchemes() {\n      const response = await api.get(\"/schemes\");\n\n      setSchemes(response.data.data);\n      setLinks(response.data.links);\n    }\n\n    if (!schemes) {\n      fetchSchemes();\n    }\n  }, [api, schemes]);\n\n  const addScheme = (response: HttpResponse<SchemeJsonView>) => {\n    schemes.push(response.data);\n    setSchemes(schemes);\n    setLinks({ ...response.links, ...links});\n  };\n\n  const removeSchemes = (removed: Row[]) => {\n    setSchemes(schemes.filter((s1: SchemeJsonView) => !removed.some(s2 => s1.id === s2.id)));\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Schemes</h1>\n      <p className=\"mb-4\">Create and manage schemes.</p>\n      <CreateSchemeForm api={api} addScheme={addScheme}/>\n      <SchemesTable api={api} schemes={schemes || []} removeSchemes={removeSchemes}/>\n    </div>\n  );\n};\n\ninterface SchemesPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, OrganisationJsonView, SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const CreateOrganisationForm = ({ api, addOrganisation, schemes }: CreateOrganisationFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [scheme, setScheme] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/organisation\", { name, scheme });\n\n      setName(\"\");\n      setMessage(\"Organisation created.\");\n      addOrganisation(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating organisation.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"400px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n              <th>Scheme</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n              <td>\n                <select name=\"scheme\" onChange={e => setScheme(e.target.value)}>\n                  <option value=\"\">&lt;Select scheme&gt;</option>\n                  { schemes.map(s => <SchemeOption key={s.id} scheme={s} />)}\n                </select>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3 || scheme === \"\"}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst SchemeOption = ({ scheme }: { scheme: SchemeJsonView }) => {\n  return (\n    <option value={scheme.id}>{scheme.name}</option>\n  );\n};\n\ninterface CreateOrganisationFormProps {\n  api: AxiosInstance,\n  addOrganisation: (response: HttpResponse<OrganisationJsonView>) => any,\n  schemes: SchemeJsonView[]\n}\n","import React from \"react\";\nimport { toOrganisationId } from \"eco-rewards-hub/dist/src/organisation/Organisation\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { OrganisationJsonView } from \"eco-rewards-hub\";\n\nexport const OrganisationsTable = ({ api, organisations, links, removeOrganisations }: OrganisationsTableProps) => {\n  const rows = organisations.map(o => ({\n    id: o.id!,\n    numeric_id: toOrganisationId(o.id!),\n    name: o.name,\n    scheme: links[o.scheme].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Scheme\",\n    selector: \"scheme\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeOrganisations}/>\n  );\n};\n\ninterface OrganisationsTableProps {\n  api: AxiosInstance,\n  organisations: OrganisationJsonView[],\n  links: Record<string, any>,\n  removeOrganisations: (organisations: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateOrganisationForm } from \"./CreateOrganisationForm/CreateOrganisationForm\";\nimport { OrganisationsTable } from \"./OrganisationsTable/OrganisationsTable\";\nimport { HttpResponse, OrganisationJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const OrganisationsPage = ({api}: OrganisationsPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [organisations, schemes] = await Promise.all([\n        api.get(\"/organisations\").then(r => r.data),\n        api.get(\"/schemes\").then(r => r.data)\n      ]);\n\n      setApiData({ organisations, schemes });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addOrganisation = (response: HttpResponse<OrganisationJsonView>) => {\n    apiData.organisations.data.push(response.data);\n    apiData.organisations.links = { ...response.links, ...apiData.organisations.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeOrganisations = (removed: Row[]) => {\n    apiData.organisations.data = apiData.organisations.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Organisations</h1>\n      <p className=\"mb-4\">Create and manage organisations.</p>\n      <CreateOrganisationForm\n        api={api}\n        addOrganisation={addOrganisation}\n        schemes={apiData ? apiData.schemes.data : []}/>\n      <OrganisationsTable\n        api={api}\n        removeOrganisations={removeOrganisations}\n        organisations={apiData ? apiData.organisations.data : []}\n        links={apiData ? apiData.organisations.links : {}}/>\n    </div>\n  );\n};\n\ninterface OrganisationsPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, GroupJsonView, OrganisationJsonView } from \"eco-rewards-hub\";\n\nexport const CreateGroupForm = ({ api, addGroup, organisations }: CreateGroupFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [organisation, setOrganisation] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/group\", { name, organisation });\n\n      setName(\"\");\n      setMessage(\"Group created.\");\n      addGroup(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating group.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"400px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n              <th>Organisation</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n              <td>\n                <select name=\"organisation\" onChange={e => setOrganisation(e.target.value)}>\n                  <option value=\"\">&lt;Select organisation&gt;</option>\n                  { organisations.map(s => <OrganisationOption key={s.id} organisation={s} />)}\n                </select>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3 || organisation === \"\"}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst OrganisationOption = ({ organisation }: { organisation: OrganisationJsonView }) => {\n  return (\n    <option value={organisation.id}>{organisation.name}</option>\n  );\n};\n\ninterface CreateGroupFormProps {\n  api: AxiosInstance,\n  addGroup: (response: HttpResponse<GroupJsonView>) => any,\n  organisations: OrganisationJsonView[]\n}\n","import React from \"react\";\nimport { toGroupId } from \"eco-rewards-hub/dist/src/group/Group\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { GroupJsonView } from \"eco-rewards-hub\";\n\nexport const GroupsTable = ({ api, groups, links, removeGroups }: GroupsTableProps) => {\n  const rows = groups.map(o => ({\n    id: o.id!,\n    numeric_id: toGroupId(o.id!),\n    name: o.name,\n    organisation: links[o.organisation].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Organisation\",\n    selector: \"organisation\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeGroups}/>\n  );\n};\n\ninterface GroupsTableProps {\n  api: AxiosInstance,\n  groups: GroupJsonView[],\n  links: Record<string, any>,\n  removeGroups: (groups: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateGroupForm } from \"./CreateGroupForm/CreateGroupForm\";\nimport { GroupsTable } from \"./GroupsTable/GroupsTable\";\nimport { HttpResponse, GroupJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const GroupsPage = ({api}: GroupsPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [groups, organisations] = await Promise.all([\n        api.get(\"/groups\").then(r => r.data),\n        api.get(\"/organisations\").then(r => r.data)\n      ]);\n\n      setApiData({ groups, organisations });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addGroup = (response: HttpResponse<GroupJsonView>) => {\n    apiData.groups.data.push(response.data);\n    apiData.groups.links = { ...response.links, ...apiData.groups.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeGroups = (removed: Row[]) => {\n    apiData.groups.data = apiData.groups.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Groups</h1>\n      <p className=\"mb-4\">Create and manage groups.</p>\n      <CreateGroupForm\n        api={api}\n        addGroup={addGroup}\n        organisations={apiData ? apiData.organisations.data : []}/>\n      <GroupsTable\n        api={api}\n        removeGroups={removeGroups}\n        groups={apiData ? apiData.groups.data : []}\n        links={apiData ? apiData.groups.links : {}}/>\n    </div>\n  );\n};\n\ninterface GroupsPageProps {\n  api: AxiosInstance\n}\n","import React from \"react\";\n\nexport const TransportModeList = ({ defaultTransportMode, setDefaultTransportMode }: TransportModeListProps) => {\n  const modes = [\n    \"Car share\",\n    \"Large car\",\n    \"Medium car\",\n    \"Small car\",\n    \"Electric car\",\n    \"Taxi\",\n    \"Park and ride\",\n    \"Tram\",\n    \"Bus\",\n    \"Train\",\n    \"Cycling\",\n    \"Walk\",\n    \"Work from home\"\n  ];\n\n  return (\n    <select className=\"custom-select custom-select-sm form-control form-control-sm\"\n            name=\"defaultTransportMode\"\n            defaultValue={defaultTransportMode}\n            onChange={e => setDefaultTransportMode(e.target.value)}>\n      <option value=\"\">Select green transport mode</option>\n      { modes.map((m, i) => <option key={i} value={m.toLowerCase()}>{m}</option>)}\n    </select>\n  );\n};\n\nexport interface TransportModeListProps {\n  defaultTransportMode: string,\n  setDefaultTransportMode: (mode: string) => any\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, MemberJsonView, GroupJsonView } from \"eco-rewards-hub\";\nimport { TransportModeList } from \"../../../TransportModeList/TransportModeList\";\n\nexport const CreateMemberForm = ({ api, addMembers, groups }: CreateMemberFormProps) => {\n  const [group, setGroup] = useState(\"\");\n  const [defaultTransportMode, setDefaultTransportMode] = useState(\"\");\n  const [defaultDistance, setDefaultDistance] = useState(\"0.00\");\n  const [quantity, setQuantity] = useState(\"10\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/members\", { group, defaultTransportMode, defaultDistance: +defaultDistance, quantity: +quantity });\n\n      setDefaultDistance(\"0.00\");\n      setMessage(quantity + \" new members created.\");\n      setQuantity(\"10\");\n      addMembers(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating members.\")\n    }\n  };\n\n  const canSubmit = group.length > 2 && +quantity > 0;\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"650px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Group</th>\n              <th>Default Mode</th>\n              <th>Default Distance</th>\n              <th>Quantity</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                <select className=\"custom-select custom-select-sm form-control form-control-sm\" name=\"group\" onChange={e => setGroup(e.target.value)}>\n                  <option value=\"\">&lt;Select group&gt;</option>\n                  { groups.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n                </select>\n              </td>\n              <td>\n                <TransportModeList defaultTransportMode={defaultTransportMode} setDefaultTransportMode={setDefaultTransportMode} />\n              </td>\n              <td><input type=\"text\" name=\"defaultDistance\" value={defaultDistance} onChange={e => setDefaultDistance(e.target.value)} className=\"col-12\"/></td>\n              <td><input type=\"text\" name=\"quantity\" value={quantity} onChange={e => setQuantity(e.target.value)} className=\"col-12\"/></td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={!canSubmit}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateMemberFormProps {\n  api: AxiosInstance,\n  addMembers: (response: HttpResponse<MemberJsonView>) => any,\n  groups: GroupJsonView[]\n}\n","import React, { FormEvent } from \"react\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { GroupJsonView, MemberJsonView } from \"eco-rewards-hub\";\nimport Modal from \"react-modal\";\nimport { TransportModeList } from \"../../../TransportModeList/TransportModeList\";\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)',\n    border: 'none',\n    background: 'none'\n  },\n  overlay: {\n    zIndex: 2,\n    backgroundColor: 'rgba(150,150,150, 0.65)'\n  }\n};\n\nexport const MembersTable = ({ api, members, links, removeMembers, groups }: MembersTableProps) => {\n  const rows: MemberRow[] = members.map(m => ({\n    id: m.id!,\n    numeric_id: m.id!.substr(8),\n    name: links[m.group].name,\n    group: m.group,\n    defaultTransportMode: m.defaultTransportMode,\n    defaultDistance: m.defaultDistance + \" miles\",\n    previousTransportMode: m.previousTransportMode,\n    totalMiles: m.totalMiles + \" miles\",\n    carbonSaving: m.carbonSaving + \"kg\",\n    rewards: m.rewards,\n    organisation: links[links[m.group].organisation].name,\n    scheme: links[links[links[m.group].organisation].scheme].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"175px\"\n  },{\n    name: \"Scheme\",\n    selector: \"scheme\",\n    sortable: true\n  },{\n    name: \"Organisation\",\n    selector: \"organisation\",\n    sortable: true\n  },{\n    name: \"Group\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Default Mode\",\n    selector: \"defaultTransportMode\",\n    sortable: false,\n    width: \"140px\"\n  },{\n    name: \"Previous Mode\",\n    selector: \"previousTransportMode\",\n    sortable: false,\n    width: \"140px\"\n  },{\n    name: \"Default Distance\",\n    selector: \"defaultDistance\",\n    sortable: true,\n    width: \"130px\"\n  },{\n    name: \"Rewards\",\n    selector: \"rewards\",\n    sortable: true,\n    width: \"90px\"\n  },{\n    name: \"Carbon Saving\",\n    selector: \"carbonSaving\",\n    sortable: true,\n    width: \"130px\"\n  },{\n    name: \"Total Miles\",\n    selector: \"totalMiles\",\n    sortable: true,\n    width: \"130px\"\n  }];\n\n  const [editMember, setEditMember] = React.useState();\n  const [message, setMessage] = React.useState();\n  const [defaultTransportMode, setDefaultTransportMode] = React.useState();\n  const [previousTransportMode, setPreviousTransportMode] = React.useState();\n  const [defaultDistance, setDefaultDistance] = React.useState();\n  const [group, setGroup] = React.useState();\n  const closeModal = () => {\n    //window.location.reload();\n  };\n  const onEdit = (m: MemberRow) => {\n    setEditMember(m);\n    setDefaultDistance(+m.defaultDistance.replace(\" miles\", \"\"));\n    setDefaultTransportMode(m.defaultTransportMode);\n    setPreviousTransportMode(m.previousTransportMode);\n    setGroup(m.group);\n  };\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const newProps = { group, defaultTransportMode, previousTransportMode, defaultDistance: +defaultDistance };\n      await api.put(editMember.id, newProps);\n\n      const member = members.find(m => m.id === editMember.id);\n      Object.assign(member, newProps);\n      setEditMember(null);\n    }\n    catch (e) {\n      setMessage(\"Error while updating.\")\n    }\n  };\n\n  return (\n    <>\n      <Table columns={columns} rows={rows} api={api} removeRows={removeMembers} editRow={onEdit}/>\n      <Modal\n        style={customStyles}\n        isOpen={!!editMember}\n        onRequestClose={closeModal}\n        contentLabel=\"Edit Member\"\n      >\n        <div className=\"card shadow mb-4\">\n          <div className=\"card-header py-3\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">Edit Member</h6>\n          </div>\n          <div className=\"card-body\">\n            <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"650px\" }}>\n              <p>{message}</p>\n              <table className=\"table table-bordered\" id=\"dataTable\">\n                <tbody>\n                <tr>\n                  <td>\n                    Group\n                  </td>\n                  <td>\n                    <select className=\"custom-select custom-select-sm form-control form-control-sm\" name=\"group\" onChange={e => setGroup(e.target.value)} defaultValue={group}>\n                      { groups.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n                    </select>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Default Transport Mode\n                  </td>\n                  <td>\n                    <TransportModeList defaultTransportMode={defaultTransportMode} setDefaultTransportMode={setDefaultTransportMode} />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Previous Transport Mode\n                  </td>\n                  <td>\n                    <TransportModeList defaultTransportMode={previousTransportMode} setDefaultTransportMode={setPreviousTransportMode} />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    Default Distance\n                  </td>\n                  <td><input type=\"text\" name=\"defaultDistance\" value={defaultDistance} onChange={e => setDefaultDistance(e.target.value)} className=\"col-12\"/></td>\n                </tr>\n                </tbody>\n              </table>\n              <div className=\"container row pl-3 pr-0\">\n                <div className=\"col-6 p-0\">\n                  <input type=\"button\" value=\"Cancel\" style={{ width: \"100px\" }} className=\"btn btn-light btn-user btn-block\" onClick={closeModal}/>\n                </div>\n                <div className=\"col-6 p-0\">\n                  <button style={{ width: \"100px\", float: 'right' }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\">\n                    Update\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\ninterface MembersTableProps {\n  api: AxiosInstance,\n  members: MemberJsonView[],\n  links: Record<string, any>,\n  groups: GroupJsonView[],\n  removeMembers: (members: Row[]) => any\n}\n\ninterface MemberRow {\n  id: string,\n  numeric_id: string,\n  name: string,\n  group: string,\n  defaultTransportMode: string,\n  defaultDistance: string,\n  previousTransportMode: string,\n  carbonSaving: string,\n  rewards: number,\n  organisation: string,\n  scheme: string,\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateMemberForm } from \"./CreateMemberForm/CreateMemberForm\";\nimport { MembersTable } from \"./MembersTable/MembersTable\";\nimport { HttpResponse, MemberJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const MembersPage = ({api}: MembersPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [members, groups] = await Promise.all([\n        api.get(\"/members\").then(r => r.data),\n        api.get(\"/groups\").then(r => r.data)\n      ]);\n\n      setApiData({ members, groups });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addMembers = (response: HttpResponse<MemberJsonView>) => {\n    apiData.members.data = apiData.members.data.concat(response.data);\n    apiData.members.links = { ...response.links, ...apiData.members.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeMembers = (removed: Row[]) => {\n    apiData.members.data = apiData.members.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  const onExportMembers = async () => {\n    const response = await api.get(\"/members\", { headers: { \"Accept\": \"text/csv\"} });\n    const a = document.createElement(\"a\");\n    a.style.display = \"none\";\n    document.body.appendChild(a);\n    a.href = window.URL.createObjectURL(new Blob([response.data], { type: \"text/csv\" }));\n    a.setAttribute(\"download\", \"members.csv\");\n    a.click();\n    window.URL.revokeObjectURL(a.href);\n    document.body.removeChild(a);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Members</h1>\n      <p className=\"mb-4\">Create and manage members.</p>\n      <div className=\"card shadow mb-4\">\n        <div className=\"card-header py-3\">\n          <h6 className=\"m-0 font-weight-bold text-primary\">Export</h6>\n        </div>\n        <div className=\"card-body\">\n          <p>Export all members as CSV</p>\n          <p><button className=\"btn btn-primary\" onClick={onExportMembers}>Export</button> </p>\n        </div>\n      </div>\n      <CreateMemberForm\n        api={api}\n        addMembers={addMembers}\n        groups={apiData ? apiData.groups.data : []}/>\n      <MembersTable\n        api={api}\n        removeMembers={removeMembers}\n        groups={apiData ? apiData.groups.data : []}\n        members={apiData ? apiData.members.data : []}\n        links={apiData ? apiData.members.links : {}}/>\n    </div>\n  );\n};\n\ninterface MembersPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useRef, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\n\nexport const CreateJourneyForm = ({ api, onJourneysUploaded }: CreateJourneyFormProps) => {\n  const file: any = useRef(null);\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!file.current.files[0]) {\n      return setMessage(\"Please select a CSV file\");\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file.current.files[0] as any, \"upload.csv\");\n\n      const headers = { \"Content-Type\": \"multipart/form-data\" };\n      const errors = await api.post(\"/journeys\", formData, { headers }).then(r => r.data.data.errors);\n      const newMessage = errors.length === 0 ? \"Upload successful\" : errors.join(\"\\n\");\n\n      setMessage(newMessage);\n      onJourneysUploaded();\n    }\n    catch (e) {\n      setMessage(\"Error while uploading journeys.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Upload</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"650px\" }}>\n          <p>{message}</p>\n          <input type=\"file\" name=\"uploadFile\" ref={file}/>\n          <button style={{ width: \"100px\", marginTop: \"20px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\">\n            Upload\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateJourneyFormProps {\n  api: AxiosInstance,\n  onJourneysUploaded: () => any\n}\n","import React from \"react\";\nimport { Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { JourneyJsonView } from \"eco-rewards-hub\";\n\nexport const JourneysTable = ({ api, journeys }: JourneysTableProps) => {\n  const rows = journeys.map(o => ({\n    ...o,\n    name: o.memberId,\n    id: o.memberId,\n    numeric_id: o.memberId.substr(8),\n    uploaded: new Date(o.uploaded + \"+0000\").toLocaleString(),\n    travelDate: new Date(o.travelDate + \"+0000\").toLocaleString(),\n    processed: o.processed === null ? \"Pending\" : new Date(o.processed +\"+0000\").toLocaleString(),\n    carbonSaving: o.carbonSaving === null ? \"-\" : o.carbonSaving + \"kg\",\n    distance: o.distance === null ? \"-\" : o.distance + \" miles\",\n    rewardsEarned: o.rewardsEarned === null ? \"-\" : o.rewardsEarned\n  }));\n\n  const columns = [{\n    name: \"Member ID\",\n    selector: \"numeric_id\",\n    sortable: true\n  },{\n    name: \"Source\",\n    selector: \"source\",\n    sortable: true,\n    width: \"110px\"\n  },{\n    name: \"Device\",\n    selector: \"deviceId\",\n    sortable: true,\n    width: \"110px\"\n  },{\n    name: \"Uploaded\",\n    selector: \"uploaded\",\n    sortable: true,\n    width: \"170px\"\n  },{\n    name: \"Processed\",\n    selector: \"processed\",\n    sortable: true,\n    width: \"170px\"\n  },{\n    name: \"Travel Date\",\n    selector: \"travelDate\",\n    sortable: true,\n    width: \"170px\"\n  },{\n    name: \"Distance\",\n    selector: \"distance\",\n    sortable: true,\n    width: \"90px\"\n  },{\n    name: \"Mode\",\n    selector: \"mode\",\n    sortable: true,\n    width: \"90px\"\n  },{\n    name: \"Rewards Earned\",\n    selector: \"rewardsEarned\",\n    sortable: true,\n    width: \"140px\"\n  },{\n    name: \"Carbon Saving\",\n    selector: \"carbonSaving\",\n    sortable: true,\n    width: \"140px\"\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api}/>\n  );\n};\n\ninterface JourneysTableProps {\n  api: AxiosInstance,\n  journeys: JourneyJsonView[]\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateJourneyForm } from \"./CreateJourneyForm/CreateJourneyForm\";\nimport { JourneysTable } from \"./JourneysTable/JourneysTable\";\n\nexport const JourneysPage = ({api}: JourneysPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const journeys = await api.get(\"/journeys\").then(r => r.data);\n\n      setApiData({ journeys });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addJourneys = () => {\n    setApiData(null);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Journeys</h1>\n      <p className=\"mb-4\">View and upload member journeys.</p>\n      <CreateJourneyForm\n        api={api}\n        onJourneysUploaded={addJourneys}/>\n      <JourneysTable\n        api={api}\n        journeys={apiData ? apiData.journeys.data : []}/>\n    </div>\n  );\n};\n\ninterface JourneysPageProps {\n  api: AxiosInstance\n}\n","import React from \"react\";\nimport { Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { DeviceStatusJsonView } from \"eco-rewards-hub/dist/src/device/DeviceStatus\";\n\nexport const DeviceStatusTable = ({ api, statuses }: DeviceStatusTableProps) => {\n  const rows = statuses.map((o,i) => ({\n    id: i + \"\",\n    name: o.deviceId,\n    numeric_id: o.deviceId,\n    received: new Date(o.received + \"+0000\").toLocaleString(),\n    status: o.status\n  }));\n\n  const columns = [{\n    name: \"Device ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"110px\"\n  },{\n    name: \"Received\",\n    selector: \"received\",\n    sortable: true,\n    width: \"180px\"\n  },{\n    name: \"Status\",\n    selector: \"status\",\n    sortable: false\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api}/>\n  );\n};\n\ninterface DeviceStatusTableProps {\n  api: AxiosInstance,\n  statuses: DeviceStatusJsonView[]\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { DeviceStatusTable } from \"./DeviceStatusTable/DeviceStatusTable\";\n\nexport const DeviceStatusPage = ({api}: DeviceStatusPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const statuses = await api.get(\"/devices\").then(r => r.data);\n\n      setApiData({ statuses });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Device Status</h1>\n      <p className=\"mb-4\">View status messages from devices connected to The Things Network.</p>\n      <DeviceStatusTable\n        api={api}\n        statuses={apiData ? apiData.statuses.data : []}/>\n    </div>\n  );\n};\n\ninterface DeviceStatusPageProps {\n  api: AxiosInstance\n}\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { DashboardPage } from './DashboardPage/DashboardPage';\nimport { SideNavigation } from \"./SideNavigation/SideNavigation\";\nimport { TopBar } from \"./TopBar/TopBar\";\nimport { Footer } from \"./Footer/Footer\";\nimport { Authentication } from \"../Authentication\";\nimport { SchemesPage } from \"./SchemesPage/SchemesPage\";\nimport { OrganisationsPage } from \"./OrganisationsPage/OrganisationsPage\";\nimport { GroupsPage } from './GroupsPage/GroupsPage';\nimport { MembersPage } from \"./MembersPage/MembersPage\";\nimport { JourneysPage } from \"./JourneysPage/JourneysPage\";\nimport {DeviceStatusPage} from \"./DeviceStatusPage/DeviceStatusPage\";\n\nexport const AuthenticatedPage = ({ auth }: AuthenticatedPageProps) => {\n  return (\n    <div id=\"wrapper\">\n      <SideNavigation/>\n      <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n        <div id=\"content\">\n          <TopBar auth={auth}/>\n          <HashRouter>\n            <Switch>\n              <Route path=\"/schemes\">\n                <SchemesPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/organisations\">\n                <OrganisationsPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/groups\">\n                <GroupsPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/members\">\n                <MembersPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/journeys\">\n                <JourneysPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/devices\">\n                <DeviceStatusPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/\">\n                <DashboardPage api={auth.getAuthenticatedApi()} />\n              </Route>\n            </Switch>\n          </HashRouter>\n        </div>\n        <Footer/>\n      </div>\n    </div>\n  );\n};\n\ninterface AuthenticatedPageProps {\n  auth: Authentication;\n}\n","import { Redirect, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nexport const PrivateRoute = ({ children, auth, ...rest }: any) => {\n  return (\n    <Route\n      {...rest}\n      render={ ({ location }) =>\n        auth.isAuthenticated ? children : <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n      }\n    />\n  );\n};\n","import { useCookies } from \"react-cookie\";\nimport Axios, { AxiosInstance } from \"axios\";\n\nexport class Authentication {\n  private readonly cookie: AuthenticationCookie;\n  private readonly setCookie: (name: string, value: any) => void;\n  private readonly removeCookie: (name: string) => void;\n  private readonly authenticatedApi: AxiosInstance;\n\n  constructor(\n    private readonly api: AxiosInstance\n  ) {\n    const [cookie, setCookie, removeCookie] = useCookies([\"auth\"]);\n\n    this.cookie = cookie.auth;\n    this.setCookie = setCookie;\n    this.removeCookie = removeCookie;\n    this.authenticatedApi = Axios.create({\n      baseURL: api.defaults.baseURL,\n      headers: {\n        authorization: \"Basic \" + (this.cookie && this.cookie.token)\n      }\n    });\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.cookie && this.cookie.token !== undefined;\n  }\n\n  public async login(username: string, password: string): Promise<void> {\n    try {\n      const response = await this.api.post(\"/login\", { username, password });\n\n      this.setCookie(\"auth\", response.data.data);\n    }\n    catch (e) {\n      console.error(e);\n    }\n  }\n\n  public logout(): void {\n    this.removeCookie(\"auth\");\n  }\n\n  public getAuthenticatedApi() {\n    return this.authenticatedApi;\n  }\n\n  public getName() {\n    return this.cookie.name;\n  }\n}\n\ninterface AuthenticationCookie {\n  token?: string\n  name?: string\n}\n","import { GroupJsonView, OrganisationJsonView, SchemeJsonView } from \"eco-rewards-hub\";\nimport React, { useState } from \"react\";\nimport \"./GroupSelect.css\";\n\nexport const GroupSelect = ({ groups, links, group, setGroup }: GroupSelectProps) => {\n  const [scheme, setScheme] = useState(\"\");\n  const [organisation, setOrganisation] = useState(\"\");\n\n  const schemes: SchemeJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/scheme/\") && k !== \"/scheme/1\")\n    .map(k => links[k]);\n\n  const organisations: OrganisationJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/organisation/\") && links[k].scheme === scheme)\n    .map(k => links[k]);\n\n  const selectableGroups: GroupJsonView[] = groups.filter(g => g.organisation === organisation);\n\n  return (\n    <div className=\"group-select\">\n      <select className=\"custom-select form-control form-control-sm\" name=\"scheme\" onChange={e => setScheme(e.target.value)}>\n        <option value=\"\">&lt;Select scheme&gt;</option>\n        { schemes.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n      </select>\n      <select disabled={organisations.length === 0} className=\"custom-select form-control form-control-sm\" name=\"organisation\" onChange={e => setOrganisation(e.target.value)}>\n        <option value=\"\">&lt;Select organisation&gt;</option>\n        { organisations.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n      </select>\n      <select disabled={selectableGroups.length === 0} className=\"custom-select form-control form-control-sm\" name=\"group\" onChange={e => setGroup(e.target.value)}>\n        <option value=\"\">&lt;Select group&gt;</option>\n        { selectableGroups.map(g => <option key={g.id} value={g.id}>{g.name}</option>)}\n      </select>\n    </div>\n  );\n};\n\nexport interface GroupSelectProps {\n  groups: GroupJsonView[],\n  links: Record<string, any>,\n  group: string,\n  setGroup: (group: string) => any\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { TransportModeList } from \"../TransportModeList/TransportModeList\";\nimport \"./RegistrationPage.css\";\nimport { GroupSelect } from \"./GroupSelect/GroupSelect\";\n\nexport const RegistrationPage = ({ api }: RegistrationPageProps) => {\n  const [success, setSuccess] = useState(false);\n  const [registrationError, setRegistrationError] = useState(\"\");\n  const [smartcard, setSmartcard] = useState(\"\");\n  const [defaultTransportMode, setDefaultTransportMode] = useState(\"\");\n  const [defaultDistance, setDefaultDistance] = useState(1.0);\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [links, setLinks] = useState({});\n\n  useEffect(() => {\n    async function fetchGroups() {\n      const response = await api.get(\"/groups\");\n\n      setGroups(response.data.data);\n      setLinks(response.data.links);\n    }\n\n    if (groups.length === 0) {\n      fetchGroups();\n    }\n  }, [api, groups]);\n\n  const register = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      await api.post(\"/member\", { smartcard, defaultTransportMode, defaultDistance, group });\n      setSuccess(true);\n    }\n    catch (err) {\n      setRegistrationError(\"Unable to register, please try again.\");\n    }\n  };\n\n  const smartcardNumberValid = smartcard.length === 16 || smartcard.length === 18;\n  const canSubmit = smartcardNumberValid && defaultTransportMode !== \"\" && defaultDistance > 0 && group !== \"\";\n  const form = () => {\n    return (\n      <>\n        <div className=\"text-center\">\n          <h1 className=\"h4 text-gray-900 mb-4\">Register</h1>\n        </div>\n        <form className=\"user\">\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputSmartcard\"\n                   pattern=\"^[0-9]*$\"\n                   minLength={16}\n                   maxLength={18}\n                   aria-describedby=\"smartcardHelp\" placeholder=\"Enter Smartcard number\" required\n                   onChange={e => setSmartcard(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TransportModeList defaultTransportMode={defaultTransportMode} setDefaultTransportMode={setDefaultTransportMode} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputDistance\"\n                   aria-describedby=\"distanceHelp\" placeholder=\"Enter normal distance in miles\" required\n                   onChange={e => setDefaultDistance(+e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <GroupSelect group={group} setGroup={setGroup} groups={groups} links={links} />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-user btn-block\" onClick={register} disabled={!canSubmit}>\n            Register\n          </button>\n        </form>\n        { registrationError && (<hr />) }\n        {registrationError}\n      </>\n    );\n  };\n\n  const successPage = () => {\n    return (\n      <>\n        <div className=\"text-center\">\n          <h1 className=\"h4 text-gray-900 mb-4\">SUCCESS - Your card has been registered!</h1>\n        </div>\n        <p>\n          Thank you.\n        </p>\n        <p>\n          Using your smartcard to report green travel choices will now add points and carbon savings to your account. For more information and to access Eco Rewards, go to <a href=\"https://www.ecorewards.org.uk\">ecorewards.org.uk</a> create your personal account.\n        </p>\n        <br/>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    { success ? successPage() : form() }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface RegistrationPageProps {\n  api: AxiosInstance\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"startbootstrap-sb-admin-2/css/sb-admin-2.min.css\"\nimport \"startbootstrap-sb-admin-2/vendor/fontawesome-free/css/all.min.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from \"./LoginPage/LoginPage\";\nimport { AuthenticatedPage } from './AuthenticatedPage/AuthenticatedPage';\nimport { PrivateRoute } from './PrivateRoute/PrivateRoute';\nimport { Authentication } from \"./Authentication\";\nimport Axios from 'axios';\nimport { RegistrationPage } from \"./RegistrationPage/RegistrationPage\";\n\nexport const App = () => {\n  const api = Axios.create({ baseURL: \"https://api.ecorewards.co.uk\" });\n  const auth = new Authentication(api);\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage auth={auth}/>\n        </Route>\n        <Route path=\"/register\">\n          <RegistrationPage api={api}/>\n        </Route>\n        <PrivateRoute auth={auth} path=\"/\">\n          <AuthenticatedPage auth={auth}/>\n        </PrivateRoute>\n      </Switch>\n    </HashRouter>\n  );\n};\n\n"],"sourceRoot":""}
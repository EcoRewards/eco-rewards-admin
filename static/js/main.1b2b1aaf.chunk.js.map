{"version":3,"sources":["LoginPage/LoginPage.tsx","AuthenticatedPage/DashboardPage/DashboardChart.tsx","AuthenticatedPage/DashboardPage/ReportScopeSelect.tsx","AuthenticatedPage/DashboardPage/DashboardPage.tsx","AuthenticatedPage/SideNavigation/SideNavigation.tsx","AuthenticatedPage/TopBar/TopBar.tsx","AuthenticatedPage/Footer/Footer.tsx","AuthenticatedPage/SchemesPage/CreateSchemeForm/CreateSchemeForm.tsx","AuthenticatedPage/Table/Table.tsx","AuthenticatedPage/SchemesPage/SchemesTable/SchemesTable.tsx","AuthenticatedPage/SchemesPage/SchemesPage.tsx","AuthenticatedPage/OrganisationsPage/CreateOrganisationForm/CreateOrganisationForm.tsx","AuthenticatedPage/OrganisationsPage/OrganisationsTable/OrganisationsTable.tsx","AuthenticatedPage/OrganisationsPage/OrganisationsPage.tsx","AuthenticatedPage/GroupsPage/CreateGroupForm/CreateGroupForm.tsx","AuthenticatedPage/GroupsPage/GroupsTable/GroupsTable.tsx","AuthenticatedPage/GroupsPage/GroupsPage.tsx","TransportModeList/TransportModeList.tsx","AuthenticatedPage/MembersPage/CreateMemberForm/CreateMemberForm.tsx","AuthenticatedPage/MembersPage/MembersTable/MembersTable.tsx","AuthenticatedPage/MembersPage/MembersPage.tsx","AuthenticatedPage/JourneysPage/CreateJourneyForm/CreateJourneyForm.tsx","AuthenticatedPage/JourneysPage/JourneysTable/JourneysTable.tsx","AuthenticatedPage/JourneysPage/JourneysPage.tsx","AuthenticatedPage/AuthenticatedPage.tsx","PrivateRoute/PrivateRoute.tsx","Authentication.ts","RegistrationPage/GroupSelect/GroupSelect.tsx","RegistrationPage/RegistrationPage.tsx","serviceWorker.ts","index.tsx","App.tsx"],"names":["LoginPage","auth","history","useHistory","from","useLocation","state","pathname","useState","loginError","setLoginError","username","setUsername","password","setPassword","rememberMe","setRememberMe","login","e","a","preventDefault","isAuthenticated","replace","className","type","id","aria-describedby","placeholder","onChange","target","value","checked","htmlFor","onClick","colours","DashboardChart","title","names","data","bars","map","name","i","key","dataKey","fill","length","width","height","margin","top","right","left","bottom","strokeDasharray","ReportScopeSelect","groups","links","scheme","setScheme","schemes","Object","keys","filter","k","startsWith","organisations","setter","s","disabled","o","DashboardPage","api","scope","setScope","setNames","carbonSaving","setCarbonSaving","rewardPoints","setRewardPoints","distance","setDistance","setGroups","setLinks","useEffect","get","response","fetchGroups","newNames","row","date","totalCarbonSaving","totalDistance","totalRewardsEarned","values","fetchApiData","SideNavigation","to","exact","activeClassName","TopBar","getName","href","logout","role","data-toggle","aria-haspopup","aria-expanded","Footer","CreateSchemeForm","addScheme","setName","message","setMessage","onSubmit","post","style","maxWidth","Table","rows","columns","removeRows","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","handleRowSelected","useCallback","contextActions","useMemo","handleDelete","window","confirm","r","Promise","all","delete","filterText","setFilterText","resetPaginationToggle","filteredItems","item","includes","subHeaderComponentMemo","onFilter","pagination","paginationResetDefaultPage","paginationPerPage","subHeader","subHeaderComponent","selectableRows","undefined","onSelectedRowsChange","clearSelectedRows","FilterComponent","onClear","TextField","styled","input","SchemesTable","removeSchemes","numeric_id","toSchemeId","selector","sortable","SchemesPage","setSchemes","fetchSchemes","push","removed","s1","some","s2","CreateOrganisationForm","addOrganisation","SchemeOption","OrganisationsTable","removeOrganisations","toOrganisationId","OrganisationsPage","apiData","setApiData","then","r1","r2","CreateGroupForm","addGroup","organisation","setOrganisation","OrganisationOption","GroupsTable","removeGroups","toGroupId","GroupsPage","TransportModeList","defaultTransportMode","setDefaultTransportMode","defaultValue","m","toLowerCase","CreateMemberForm","addMembers","group","setGroup","defaultDistance","setDefaultDistance","quantity","setQuantity","canSubmit","MembersTable","members","removeMembers","substr","totalMiles","rewards","MembersPage","onExportMembers","headers","document","createElement","display","body","appendChild","URL","createObjectURL","Blob","setAttribute","click","revokeObjectURL","removeChild","concat","CreateJourneyForm","onJourneysUploaded","file","useRef","current","files","formData","FormData","append","errors","newMessage","join","ref","marginTop","JourneysTable","journeys","source","memberId","processed","rewardsEarned","JourneysPage","AuthenticatedPage","path","getAuthenticatedApi","PrivateRoute","children","rest","render","location","Authentication","cookie","setCookie","removeCookie","authenticatedApi","useCookies","this","Axios","create","baseURL","defaults","authorization","token","console","error","GroupSelect","selectableGroups","g","RegistrationPage","success","setSuccess","registrationError","setRegistrationError","smartcard","setSmartcard","register","pattern","minLength","maxLength","required","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b2b1aaf.chunk.js","sourcesContent":["import React, { FormEvent, useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { Authentication } from \"../Authentication\";\nimport {\n  useHistory,\n  useLocation\n} from \"react-router-dom\";\n\nexport const LoginPage = ({ auth }: LoginPageProps) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: \"/\" } };\n  const [loginError, setLoginError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(true);\n\n  const login = async (e: FormEvent) => {\n    e.preventDefault();\n\n    await auth.login(username, password);\n\n    if (auth.isAuthenticated) {\n      history.replace(from);\n    }\n    else {\n      setLoginError(\"Unable to login, please try again.\");\n    }\n  };\n\n  if (auth.isAuthenticated) {\n    history.replace(from);\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    <div className=\"text-center\">\n                      <h1 className=\"h4 text-gray-900 mb-4\">Login</h1>\n                    </div>\n                    <form className=\"user\">\n                      <div className=\"form-group\">\n                        <input type=\"email\" className=\"form-control form-control-user\" id=\"exampleInputEmail\"\n                               aria-describedby=\"emailHelp\" placeholder=\"Enter Email Address...\"\n                               onChange={e => setUsername(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <input type=\"password\" className=\"form-control form-control-user\" id=\"exampleInputPassword\"\n                               placeholder=\"Password\" onChange={e => setPassword(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox small\">\n                          <input type=\"checkbox\" checked={rememberMe} onChange={() => setRememberMe(!rememberMe)} className=\"custom-control-input\" id=\"customCheck\"/>\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck\">Remember Me</label>\n                        </div>\n                      </div>\n                      <button className=\"btn btn-primary btn-user btn-block\" onClick={login}>\n                        Login\n                      </button>\n                    </form>\n                    { loginError && (<hr />) }\n                    {loginError}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface LoginPageProps {\n  auth: Authentication\n}\n","import { Bar, BarChart, CartesianGrid, Legend, Tooltip, XAxis, YAxis } from \"recharts\";\nimport React from \"react\";\n\nconst colours = [\"#ffc658\", \"#8884d8\", \"#82ca9d\"];\n\nexport const DashboardChart = ({ title, names, data }: DashboardChartProps) => {\n  const bars = names.map((name, i) => <Bar key={i} dataKey={name} fill={colours[i % colours.length]} />);\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">{ title }</h6>\n      </div>\n      <div className=\"card-body\">\n        {\n          !data || data.length === 0\n            ? <p>No data.</p>\n            : <BarChart\n                width={1376}\n                height={400}\n                data={data}\n                margin={{\n                  top: 5, right: 30, left: 20, bottom: 5,\n                }}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                { bars }\n              </BarChart>\n        }\n      </div>\n    </div>\n\n  )\n};\n\nexport interface DashboardChartProps {\n  title: string,\n  names: string[],\n  data: any[]\n}\n","import { GroupJsonView, OrganisationJsonView, SchemeJsonView } from \"eco-rewards-hub\";\nimport React, { Dispatch, useState } from \"react\";\n\nexport const ReportScopeSelect = ({ groups, links, onChange }: ReportScopeSelectProps) => {\n  const [scheme, setScheme] = useState(\"\");\n\n  const schemes: SchemeJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/scheme/\") && k !== \"/scheme/1\")\n    .map(k => links[k]);\n\n  const organisations: OrganisationJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/organisation/\") && links[k].scheme === scheme)\n    .map(k => links[k]);\n\n  const bubbleChange = (setter: Dispatch<string>, value: string) => {\n    setter(value);\n    onChange(value);\n  };\n\n  return (\n    <div className=\"group-select\">\n      <select className=\"custom-select form-control form-control-sm\" name=\"scheme\" onChange={e => bubbleChange(setScheme, e.target.value)}>\n        <option value=\"\">&lt;Select scheme&gt;</option>\n        { schemes.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n      </select>\n      <select disabled={organisations.length === 0} className=\"custom-select form-control form-control-sm\" name=\"organisation\" onChange={e => onChange(e.target.value || scheme)}>\n        <option value=\"\">&lt;Select organisation&gt;</option>\n        { organisations.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n      </select>\n    </div>\n  );\n};\n\nexport interface ReportScopeSelectProps {\n  groups: GroupJsonView[],\n  links: Record<string, any>,\n  onChange: (selected: string) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { DashboardChart } from \"./DashboardChart\";\nimport { ReportScopeSelect } from \"./ReportScopeSelect\";\n\nexport const DashboardPage = ({ api }: DashboardPageProps) => {\n  const [scope, setScope] = useState(\"/global/0/report\");\n  const [names, setNames] = useState();\n  const [carbonSaving, setCarbonSaving] = useState();\n  const [rewardPoints, setRewardPoints] = useState();\n  const [distance, setDistance] = useState();\n  const [groups, setGroups] = useState([]);\n  const [links, setLinks] = useState({});\n\n  useEffect(() => {\n    async function fetchGroups() {\n      const response = await api.get(\"/groups\");\n\n      setGroups(response.data.data);\n      setLinks(response.data.links);\n    }\n\n    if (groups.length === 0) {\n      fetchGroups();\n    }\n  }, [api, groups]);\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const response = await api.get(scope);\n\n      const carbonSaving = {} as Record<string, Record<string, number>>;\n      const rewardPoints = {} as Record<string, Record<string, number>>;\n      const distance = {} as Record<string, Record<string, number>>;\n      const newNames = {} as Record<string, true>;\n\n      for (const row of response.data.data) {\n        carbonSaving[row.date] = carbonSaving[row.date] || { date: row.date };\n        carbonSaving[row.date][row.name] = row.totalCarbonSaving;\n        distance[row.date] = distance[row.date] || { date: row.date };\n        distance[row.date][row.name] = row.totalDistance;\n        rewardPoints[row.date] = rewardPoints[row.date] || { date: row.date };\n        rewardPoints[row.date][row.name] = row.totalRewardsEarned;\n        newNames[row.name] = true;\n      }\n\n      setNames(Object.keys(newNames));\n      setCarbonSaving(Object.values(carbonSaving));\n      setDistance(Object.values(distance));\n      setRewardPoints(Object.values(rewardPoints));\n    }\n\n    if (!names) {\n      fetchApiData();\n    }\n  }, [api, names, scope]);\n\n  const onScopeChange = (scope: string) => {\n    setScope(scope ? scope + \"/report\" : \"/global/0/report\");\n    setNames(null);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Dashboard</h1>\n      <ReportScopeSelect groups={groups} links={links} onChange={onScopeChange}/>\n      { !names\n        ? <p>Loading</p>\n        : <>\n            <DashboardChart key=\"rewards\" title=\"Rewards Earned\" data={rewardPoints} names={names}/>\n            <DashboardChart key=\"carbon\" title=\"Carbon Saving\" data={carbonSaving} names={names}/>\n            <DashboardChart key=\"distance\" title=\"Distance\" data={distance} names={names}/>\n          </>\n      }\n    </div>\n  );\n};\n\nexport interface DashboardPageProps {\n  api: AxiosInstance\n}\n\ninterface ReportRow {\n  date: string,\n  name: string,\n  totalCarbonSaving: number,\n  totalDistance: number,\n  totalRewardsEarned: number\n}\n","import React from 'react';\nimport \"./SideNavigation.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const SideNavigation = () => {\n  return (\n    <ul className=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\" id=\"accordionSidebar\">\n      <NavLink className=\"sidebar-brand d-flex align-items-center justify-content-center\" to=\"/\">\n        <div className=\"sidebar-brand-icon rotate-n-15\">\n          <i className=\"fas fa-leaf\"></i>\n        </div>\n        <div className=\"sidebar-brand-text mx-3\">Eco Rewards Hub Admin</div>\n      </NavLink>\n\n      <hr className=\"sidebar-divider my-0\"/>\n\n      <li className=\"nav-item\">\n        <NavLink exact={true} activeClassName=\"active\" className=\"nav-link\" to=\"/\">\n          <i className=\"fas fa-fw fa-tachometer-alt\"></i>\n          <span>Dashboard</span></NavLink>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Manage\n      </div>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/schemes\">\n          <i className=\"fas fa-fw fa-city\"></i>\n          <span>Schemes</span></NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/organisations\">\n          <i className=\"fas fa-fw fa-school\"></i>\n          <span>Organisations</span>\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/groups\">\n          <i className=\"fas fa-fw fa-users\"></i>\n          <span>Groups</span>\n        </NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/members\">\n          <i className=\"fas fa-fw fa-user\"></i>\n          <span>Members</span></NavLink>\n      </li>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/journeys\">\n          <i className=\"fas fa-fw fa-bus\"></i>\n          <span>Journeys</span></NavLink>\n      </li>\n\n      <hr className=\"sidebar-divider\"/>\n\n      <div className=\"sidebar-heading\">\n        Reports\n      </div>\n\n      <li className=\"nav-item\">\n        <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/journeys\">\n          <i className=\"fas fa-fw fa-bus\"></i>\n          <span>Journeys</span></NavLink>\n      </li>\n\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Authentication } from \"../../Authentication\";\n\nexport const TopBar = ({ auth }: TopBarProps) => {\n\n  const logout = (e: any) => {\n    e.preventDefault();\n\n    auth.logout();\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n      <span className=\"text-gray-600 small\">Welcome back, { auth.getName() }</span>\n\n      <ul className=\"navbar-nav ml-auto\">\n\n        <li className=\"nav-item dropdown no-arrow\">\n          <a className=\"dropdown-toggle\" href=\"/logout\" onClick={logout} id=\"userDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Logout</span>\n            <i className=\"fas fa-user fa-sm fa-fw mr-2 text-gray-400\"></i>\n          </a>\n        </li>\n\n      </ul>\n\n    </nav>\n\n  );\n};\n\ninterface TopBarProps {\n  auth: Authentication;\n}\n","import React from 'react';\n\nexport const Footer = () => {\n  return (\n    <footer className=\"sticky-footer bg-white\">\n    <div className=\"container my-auto\">\n      <div className=\"copyright text-center my-auto\">\n        <span>Copyright &copy; Eco Rewards</span>\n      </div>\n    </div>\n  </footer>\n  );\n};\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const CreateSchemeForm = ({ api, addScheme }: CreateSchemeFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/scheme\", { name });\n\n      setName(\"\");\n      setMessage(\"Scheme created.\");\n      addScheme(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating scheme.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"250px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n            </tr>\n            </tbody>\n          </table>\n          <button  style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateSchemeFormProps {\n  api: AxiosInstance,\n  addScheme: (response: HttpResponse<SchemeJsonView>) => any\n}\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport DataTable, { IDataTableColumn } from \"react-data-table-component\";\nimport styled from \"styled-components\";\nimport \"./Table.css\";\nimport { AxiosInstance } from \"axios\";\n\nexport const Table = <T extends Row>({ rows, columns, removeRows, api }: TableProps<T>) => {\n  const [selectedRows, setSelectedRows] = useState([] as Row[]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n\n  const handleRowSelected = useCallback(state => {\n    setSelectedRows(state.selectedRows);\n  }, []);\n\n  const contextActions = useMemo(() => {\n    const handleDelete = async () => {\n\n      if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n        setToggleCleared(!toggleCleared);\n\n        await Promise.all(selectedRows.map(r => api.delete(r.id)));\n\n        removeRows!(selectedRows);\n      }\n    };\n\n    return <button className=\"btn btn-danger\" key=\"delete\" onClick={handleDelete}>Delete</button>;\n  }, [selectedRows, toggleCleared, api, removeRows]);\n\n  const [filterText, setFilterText] = useState('');\n  const [resetPaginationToggle] = useState(false);\n  const filteredItems = rows.filter(item => item.name && item.name.includes(filterText));\n  const subHeaderComponentMemo = useMemo(() => {\n    return <FilterComponent onFilter={(e: any) => setFilterText(e.target.value)} filterText={filterText} />;\n  }, [filterText]);\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Edit</h6>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <DataTable\n            columns={columns}\n            data={filteredItems}\n            pagination\n            paginationResetDefaultPage={resetPaginationToggle}\n            paginationPerPage={30}\n            subHeader\n            subHeaderComponent={subHeaderComponentMemo}\n            selectableRows\n            contextActions={removeRows ? contextActions : undefined}\n            onSelectedRowsChange={handleRowSelected}\n            clearSelectedRows={toggleCleared}\n          />\n        </div>\n      </div>\n    </div>\n  )\n};\n\ninterface TableProps<T extends Row> {\n  rows: T[],\n  columns: IDataTableColumn<T>[],\n  removeRows?: (rows: Row[]) => any,\n  api: AxiosInstance\n}\n\nexport interface Row {\n  id: string,\n  name: string\n}\n\nconst FilterComponent = ({ filterText, onFilter, onClear }: any) => (\n  <TextField id=\"search\" type=\"text\" placeholder=\"Filter By Name\" value={filterText} onChange={onFilter} />\n);\n\nconst TextField = styled.input`\n  height: 32px;\n  width: 200px;\n  border-radius: 3px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n  border: 1px solid #e5e5e5;\n  padding: 0 32px 0 16px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport { toSchemeId } from \"eco-rewards-hub/dist/src/scheme/Scheme\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const SchemesTable = ({ api, schemes, removeSchemes }: SchemesTableProps) => {\n  const rows = schemes.map(s => ({ numeric_id: toSchemeId(s.id!), ...s }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} removeRows={removeSchemes} api={api}/>\n  );\n};\n\ninterface SchemesTableProps {\n  api: AxiosInstance,\n  schemes: (SchemeJsonView & { id: string })[],\n  removeSchemes: (schemes: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateSchemeForm } from \"./CreateSchemeForm/CreateSchemeForm\";\nimport { SchemesTable } from \"./SchemesTable/SchemesTable\";\nimport { HttpResponse, SchemeJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const SchemesPage = ({api}: SchemesPageProps) => {\n  const [schemes, setSchemes] = useState();\n  const [links, setLinks] = useState({});\n\n  useEffect(() => {\n    async function fetchSchemes() {\n      const response = await api.get(\"/schemes\");\n\n      setSchemes(response.data.data);\n      setLinks(response.data.links);\n    }\n\n    if (!schemes) {\n      fetchSchemes();\n    }\n  }, [api, schemes]);\n\n  const addScheme = (response: HttpResponse<SchemeJsonView>) => {\n    schemes.push(response.data);\n    setSchemes(schemes);\n    setLinks({ ...response.links, ...links});\n  };\n\n  const removeSchemes = (removed: Row[]) => {\n    setSchemes(schemes.filter((s1: SchemeJsonView) => !removed.some(s2 => s1.id === s2.id)));\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Schemes</h1>\n      <p className=\"mb-4\">Create and manage schemes.</p>\n      <CreateSchemeForm api={api} addScheme={addScheme}/>\n      <SchemesTable api={api} schemes={schemes || []} removeSchemes={removeSchemes}/>\n    </div>\n  );\n};\n\ninterface SchemesPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, OrganisationJsonView, SchemeJsonView } from \"eco-rewards-hub\";\n\nexport const CreateOrganisationForm = ({ api, addOrganisation, schemes }: CreateOrganisationFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [scheme, setScheme] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/organisation\", { name, scheme });\n\n      setName(\"\");\n      setMessage(\"Organisation created.\");\n      addOrganisation(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating organisation.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"400px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n              <th>Scheme</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n              <td>\n                <select name=\"scheme\" onChange={e => setScheme(e.target.value)}>\n                  <option value=\"\">&lt;Select scheme&gt;</option>\n                  { schemes.map(s => <SchemeOption key={s.id} scheme={s} />)}\n                </select>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3 || scheme === \"\"}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst SchemeOption = ({ scheme }: { scheme: SchemeJsonView }) => {\n  return (\n    <option value={scheme.id}>{scheme.name}</option>\n  );\n};\n\ninterface CreateOrganisationFormProps {\n  api: AxiosInstance,\n  addOrganisation: (response: HttpResponse<OrganisationJsonView>) => any,\n  schemes: SchemeJsonView[]\n}\n","import React from \"react\";\nimport { toOrganisationId } from \"eco-rewards-hub/dist/src/organisation/Organisation\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { OrganisationJsonView } from \"eco-rewards-hub\";\n\nexport const OrganisationsTable = ({ api, organisations, links, removeOrganisations }: OrganisationsTableProps) => {\n  const rows = organisations.map(o => ({\n    id: o.id!,\n    numeric_id: toOrganisationId(o.id!),\n    name: o.name,\n    scheme: links[o.scheme].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Scheme\",\n    selector: \"scheme\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeOrganisations}/>\n  );\n};\n\ninterface OrganisationsTableProps {\n  api: AxiosInstance,\n  organisations: OrganisationJsonView[],\n  links: Record<string, any>,\n  removeOrganisations: (organisations: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateOrganisationForm } from \"./CreateOrganisationForm/CreateOrganisationForm\";\nimport { OrganisationsTable } from \"./OrganisationsTable/OrganisationsTable\";\nimport { HttpResponse, OrganisationJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const OrganisationsPage = ({api}: OrganisationsPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [organisations, schemes] = await Promise.all([\n        api.get(\"/organisations\").then(r => r.data),\n        api.get(\"/schemes\").then(r => r.data)\n      ]);\n\n      setApiData({ organisations, schemes });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addOrganisation = (response: HttpResponse<OrganisationJsonView>) => {\n    apiData.organisations.data.push(response.data);\n    apiData.organisations.links = { ...response.links, ...apiData.organisations.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeOrganisations = (removed: Row[]) => {\n    apiData.organisations.data = apiData.organisations.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Organisations</h1>\n      <p className=\"mb-4\">Create and manage organisations.</p>\n      <CreateOrganisationForm\n        api={api}\n        addOrganisation={addOrganisation}\n        schemes={apiData ? apiData.schemes.data : []}/>\n      <OrganisationsTable\n        api={api}\n        removeOrganisations={removeOrganisations}\n        organisations={apiData ? apiData.organisations.data : []}\n        links={apiData ? apiData.organisations.links : {}}/>\n    </div>\n  );\n};\n\ninterface OrganisationsPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, GroupJsonView, OrganisationJsonView } from \"eco-rewards-hub\";\n\nexport const CreateGroupForm = ({ api, addGroup, organisations }: CreateGroupFormProps) => {\n  const [name, setName] = useState(\"\");\n  const [organisation, setOrganisation] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/group\", { name, organisation });\n\n      setName(\"\");\n      setMessage(\"Group created.\");\n      addGroup(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating group.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"400px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Name</th>\n              <th>Organisation</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td><input type=\"text\" name=\"name\" value={name} onChange={e => setName(e.target.value)} className=\"col-12\"/></td>\n              <td>\n                <select name=\"organisation\" onChange={e => setOrganisation(e.target.value)}>\n                  <option value=\"\">&lt;Select organisation&gt;</option>\n                  { organisations.map(s => <OrganisationOption key={s.id} organisation={s} />)}\n                </select>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={name.length < 3 || organisation === \"\"}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst OrganisationOption = ({ organisation }: { organisation: OrganisationJsonView }) => {\n  return (\n    <option value={organisation.id}>{organisation.name}</option>\n  );\n};\n\ninterface CreateGroupFormProps {\n  api: AxiosInstance,\n  addGroup: (response: HttpResponse<GroupJsonView>) => any,\n  organisations: OrganisationJsonView[]\n}\n","import React from \"react\";\nimport { toGroupId } from \"eco-rewards-hub/dist/src/group/Group\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { GroupJsonView } from \"eco-rewards-hub\";\n\nexport const GroupsTable = ({ api, groups, links, removeGroups }: GroupsTableProps) => {\n  const rows = groups.map(o => ({\n    id: o.id!,\n    numeric_id: toGroupId(o.id!),\n    name: o.name,\n    organisation: links[o.organisation].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"100px\"\n  },{\n    name: \"Name\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Organisation\",\n    selector: \"organisation\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeGroups}/>\n  );\n};\n\ninterface GroupsTableProps {\n  api: AxiosInstance,\n  groups: GroupJsonView[],\n  links: Record<string, any>,\n  removeGroups: (groups: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateGroupForm } from \"./CreateGroupForm/CreateGroupForm\";\nimport { GroupsTable } from \"./GroupsTable/GroupsTable\";\nimport { HttpResponse, GroupJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const GroupsPage = ({api}: GroupsPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [groups, organisations] = await Promise.all([\n        api.get(\"/groups\").then(r => r.data),\n        api.get(\"/organisations\").then(r => r.data)\n      ]);\n\n      setApiData({ groups, organisations });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addGroup = (response: HttpResponse<GroupJsonView>) => {\n    apiData.groups.data.push(response.data);\n    apiData.groups.links = { ...response.links, ...apiData.groups.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeGroups = (removed: Row[]) => {\n    apiData.groups.data = apiData.groups.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Groups</h1>\n      <p className=\"mb-4\">Create and manage groups.</p>\n      <CreateGroupForm\n        api={api}\n        addGroup={addGroup}\n        organisations={apiData ? apiData.organisations.data : []}/>\n      <GroupsTable\n        api={api}\n        removeGroups={removeGroups}\n        groups={apiData ? apiData.groups.data : []}\n        links={apiData ? apiData.groups.links : {}}/>\n    </div>\n  );\n};\n\ninterface GroupsPageProps {\n  api: AxiosInstance\n}\n","import React from \"react\";\n\nexport const TransportModeList = ({ defaultTransportMode, setDefaultTransportMode }: TransportModeListProps) => {\n  const modes = [\n    \"Car share\",\n    \"Electric car\",\n    \"Taxi\",\n    \"Park and ride\",\n    \"Tram\",\n    \"Bus\",\n    \"Train\",\n    \"Cycling\",\n    \"Walk\",\n    \"Work from home\"\n  ];\n\n  return (\n    <select className=\"custom-select custom-select-sm form-control form-control-sm\"\n            name=\"defaultTransportMode\"\n            defaultValue={defaultTransportMode}\n            onChange={e => setDefaultTransportMode(e.target.value)}>\n      <option value=\"\">Select green transport mode</option>\n      { modes.map((m, i) => <option key={i} value={m.toLowerCase()}>{m}</option>)}\n    </select>\n  );\n};\n\nexport interface TransportModeListProps {\n  defaultTransportMode: string,\n  setDefaultTransportMode: (mode: string) => any\n}\n","import React, { FormEvent, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { HttpResponse, MemberJsonView, GroupJsonView } from \"eco-rewards-hub\";\nimport { TransportModeList } from \"../../../TransportModeList/TransportModeList\";\n\nexport const CreateMemberForm = ({ api, addMembers, groups }: CreateMemberFormProps) => {\n  const [group, setGroup] = useState(\"\");\n  const [defaultTransportMode, setDefaultTransportMode] = useState(\"\");\n  const [defaultDistance, setDefaultDistance] = useState(\"0.00\");\n  const [quantity, setQuantity] = useState(\"10\");\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/members\", { group, defaultTransportMode, defaultDistance: +defaultDistance, quantity: +quantity });\n\n      setDefaultDistance(\"0.00\");\n      setMessage(quantity + \" new members created.\");\n      setQuantity(\"10\");\n      addMembers(response.data);\n    }\n    catch (e) {\n      setMessage(\"Error while creating members.\")\n    }\n  };\n\n  const canSubmit = group.length > 2 && +quantity > 0;\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Create</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"650px\" }}>\n          <p>{message}</p>\n          <table className=\"table table-bordered\" id=\"dataTable\">\n            <thead>\n            <tr>\n              <th>Group</th>\n              <th>Default Mode</th>\n              <th>Default Distance</th>\n              <th>Quantity</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                <select className=\"custom-select custom-select-sm form-control form-control-sm\" name=\"group\" onChange={e => setGroup(e.target.value)}>\n                  <option value=\"\">&lt;Select group&gt;</option>\n                  { groups.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n                </select>\n              </td>\n              <td>\n                <TransportModeList defaultTransportMode={defaultTransportMode} setDefaultTransportMode={setDefaultTransportMode} />\n              </td>\n              <td><input type=\"text\" name=\"defaultDistance\" value={defaultDistance} onChange={e => setDefaultDistance(e.target.value)} className=\"col-12\"/></td>\n              <td><input type=\"text\" name=\"quantity\" value={quantity} onChange={e => setQuantity(e.target.value)} className=\"col-12\"/></td>\n            </tr>\n            </tbody>\n          </table>\n          <button style={{ width: \"100px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\" disabled={!canSubmit}>\n            Create\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateMemberFormProps {\n  api: AxiosInstance,\n  addMembers: (response: HttpResponse<MemberJsonView>) => any,\n  groups: GroupJsonView[]\n}\n","import React from \"react\";\nimport { Row, Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { MemberJsonView } from \"eco-rewards-hub\";\n\nexport const MembersTable = ({ api, members, links, removeMembers }: MembersTableProps) => {\n  const rows = members.map(m => ({\n    id: m.id!,\n    numeric_id: m.id!.substr(8),\n    name: links[m.group].name,\n    defaultTransportMode: m.defaultTransportMode,\n    defaultDistance: m.defaultDistance + \" miles\",\n    totalMiles: m.totalMiles + \" miles\",\n    carbonSaving: m.carbonSaving + \"kg\",\n    rewards: m.rewards,\n    organisation: links[links[m.group].organisation].name,\n    scheme: links[links[links[m.group].organisation].scheme].name\n  }));\n\n  const columns = [{\n    name: \"ID\",\n    selector: \"numeric_id\",\n    sortable: true,\n    width: \"145px\"\n  },{\n    name: \"Scheme\",\n    selector: \"scheme\",\n    sortable: true\n  },{\n    name: \"Organisation\",\n    selector: \"organisation\",\n    sortable: true\n  },{\n    name: \"Group\",\n    selector: \"name\",\n    sortable: true\n  },{\n    name: \"Default Mode\",\n    selector: \"defaultTransportMode\",\n    sortable: false,\n    width: \"140px\"\n  },{\n    name: \"Default Distance\",\n    selector: \"defaultDistance\",\n    sortable: true,\n    width: \"130px\"\n  },{\n    name: \"Rewards\",\n    selector: \"rewards\",\n    sortable: true,\n    width: \"90px\"\n  },{\n    name: \"Carbon Saving\",\n    selector: \"carbonSaving\",\n    sortable: true,\n    width: \"130px\"\n  },{\n    name: \"Total Miles\",\n    selector: \"totalMiles\",\n    sortable: true,\n    width: \"130px\"\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api} removeRows={removeMembers}/>\n  );\n};\n\ninterface MembersTableProps {\n  api: AxiosInstance,\n  members: MemberJsonView[],\n  links: Record<string, any>,\n  removeMembers: (members: Row[]) => any\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateMemberForm } from \"./CreateMemberForm/CreateMemberForm\";\nimport { MembersTable } from \"./MembersTable/MembersTable\";\nimport { HttpResponse, MemberJsonView } from \"eco-rewards-hub\";\nimport { Row } from \"../Table/Table\";\n\nexport const MembersPage = ({api}: MembersPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const [members, groups] = await Promise.all([\n        api.get(\"/members\").then(r => r.data),\n        api.get(\"/groups\").then(r => r.data)\n      ]);\n\n      setApiData({ members, groups });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addMembers = (response: HttpResponse<MemberJsonView>) => {\n    apiData.members.data = apiData.members.data.concat(response.data);\n    apiData.members.links = { ...response.links, ...apiData.members.links };\n    setApiData({ ...apiData });\n  };\n\n  const removeMembers = (removed: Row[]) => {\n    apiData.members.data = apiData.members.data.filter((r1: Row) => !removed.some(r2 => r1.id === r2.id));\n    setApiData({ ...apiData });\n  };\n\n  const onExportMembers = async () => {\n    const response = await api.get(\"/members\", { headers: { \"Accept\": \"text/csv\"} });\n    const a = document.createElement(\"a\");\n    a.style.display = \"none\";\n    document.body.appendChild(a);\n    a.href = window.URL.createObjectURL(new Blob([response.data], { type: \"text/csv\" }));\n    a.setAttribute(\"download\", \"members.csv\");\n    a.click();\n    window.URL.revokeObjectURL(a.href);\n    document.body.removeChild(a);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Members</h1>\n      <p className=\"mb-4\">Create and manage members.</p>\n      <div className=\"card shadow mb-4\">\n        <div className=\"card-header py-3\">\n          <h6 className=\"m-0 font-weight-bold text-primary\">Export</h6>\n        </div>\n        <div className=\"card-body\">\n          <p>Export all members as CSV</p>\n          <p><button className=\"btn btn-primary\" onClick={onExportMembers}>Export</button> </p>\n        </div>\n      </div>\n      <CreateMemberForm\n        api={api}\n        addMembers={addMembers}\n        groups={apiData ? apiData.groups.data : []}/>\n      <MembersTable\n        api={api}\n        removeMembers={removeMembers}\n        members={apiData ? apiData.members.data : []}\n        links={apiData ? apiData.members.links : {}}/>\n    </div>\n  );\n};\n\ninterface MembersPageProps {\n  api: AxiosInstance\n}\n","import React, { FormEvent, useRef, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\n\nexport const CreateJourneyForm = ({ api, onJourneysUploaded }: CreateJourneyFormProps) => {\n  const file: any = useRef(null);\n  const [message, setMessage] = useState(\"\");\n\n  const onSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n\n    if (!file.current.files[0]) {\n      return setMessage(\"Please select a CSV file\");\n    }\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file.current.files[0] as any, \"upload.csv\");\n\n      const headers = { \"Content-Type\": \"multipart/form-data\" };\n      const errors = await api.post(\"/journeys\", formData, { headers }).then(r => r.data.data.errors);\n      const newMessage = errors.length === 0 ? \"Upload successful\" : errors.join(\"\\n\");\n\n      setMessage(newMessage);\n      onJourneysUploaded();\n    }\n    catch (e) {\n      setMessage(\"Error while uploading journeys.\")\n    }\n  };\n\n  return (\n    <div className=\"card shadow mb-4\">\n      <div className=\"card-header py-3\">\n        <h6 className=\"m-0 font-weight-bold text-primary\">Upload</h6>\n      </div>\n      <div className=\"card-body\">\n        <form className=\"table-responsive\" onSubmit={onSubmit} style={{ maxWidth: \"650px\" }}>\n          <p>{message}</p>\n          <input type=\"file\" name=\"uploadFile\" ref={file}/>\n          <button style={{ width: \"100px\", marginTop: \"20px\" }} type=\"submit\" className=\"btn btn-primary btn-user btn-block\">\n            Upload\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\ninterface CreateJourneyFormProps {\n  api: AxiosInstance,\n  onJourneysUploaded: () => any\n}\n","import React from \"react\";\nimport { Table } from \"../../Table/Table\";\nimport { AxiosInstance } from \"axios\";\nimport { JourneyJsonView } from \"eco-rewards-hub\";\n\nexport const JourneysTable = ({ api, journeys }: JourneysTableProps) => {\n  const rows = journeys.map(o => ({\n    ...o,\n    name: o.source,\n    id: o.memberId,\n    numeric_id: o.memberId.substr(8),\n    processed: o.processed === null ? \"Pending\" : o.processed,\n    carbonSaving: o.carbonSaving === null ? \"-\" : o.carbonSaving + \"kg\",\n    rewardsEarned: o.rewardsEarned === null ? \"-\" : o.rewardsEarned\n  }));\n\n  const columns = [{\n    name: \"Member ID\",\n    selector: \"numeric_id\",\n    sortable: true\n  },{\n    name: \"Source\",\n    selector: \"source\",\n    sortable: true\n  },{\n    name: \"Uploaded\",\n    selector: \"uploaded\",\n    sortable: true\n  },{\n    name: \"Processed\",\n    selector: \"processed\",\n    sortable: true\n  },{\n    name: \"Travel Date\",\n    selector: \"travelDate\",\n    sortable: true\n  },{\n    name: \"Distance\",\n    selector: \"distance\",\n    sortable: true\n  },{\n    name: \"Mode\",\n    selector: \"mode\",\n    sortable: true\n  },{\n    name: \"Rewards Earned\",\n    selector: \"rewardsEarned\",\n    sortable: true\n  },{\n    name: \"Carbon Saving\",\n    selector: \"carbonSaving\",\n    sortable: true\n  }];\n\n  return (\n    <Table columns={columns} rows={rows} api={api}/>\n  );\n};\n\ninterface JourneysTableProps {\n  api: AxiosInstance,\n  journeys: JourneyJsonView[]\n}\n","import React, { useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { CreateJourneyForm } from \"./CreateJourneyForm/CreateJourneyForm\";\nimport { JourneysTable } from \"./JourneysTable/JourneysTable\";\n\nexport const JourneysPage = ({api}: JourneysPageProps) => {\n  const [apiData, setApiData] = useState();\n\n  useEffect(() => {\n    async function fetchApiData() {\n      const journeys = await api.get(\"/journeys\").then(r => r.data);\n\n      setApiData({ journeys });\n    }\n\n    if (!apiData) {\n      fetchApiData();\n    }\n  }, [api, apiData]);\n\n  const addJourneys = () => {\n    setApiData(null);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h1 className=\"h3 mb-2 text-gray-800\">Journeys</h1>\n      <p className=\"mb-4\">View and upload member journeys.</p>\n      <CreateJourneyForm\n        api={api}\n        onJourneysUploaded={addJourneys}/>\n      <JourneysTable\n        api={api}\n        journeys={apiData ? apiData.journeys.data : []}/>\n    </div>\n  );\n};\n\ninterface JourneysPageProps {\n  api: AxiosInstance\n}\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { DashboardPage } from './DashboardPage/DashboardPage';\nimport { SideNavigation } from \"./SideNavigation/SideNavigation\";\nimport { TopBar } from \"./TopBar/TopBar\";\nimport { Footer } from \"./Footer/Footer\";\nimport { Authentication } from \"../Authentication\";\nimport { SchemesPage } from \"./SchemesPage/SchemesPage\";\nimport { OrganisationsPage } from \"./OrganisationsPage/OrganisationsPage\";\nimport { GroupsPage } from './GroupsPage/GroupsPage';\nimport { MembersPage } from \"./MembersPage/MembersPage\";\nimport { JourneysPage } from \"./JourneysPage/JourneysPage\";\n\nexport const AuthenticatedPage = ({ auth }: AuthenticatedPageProps) => {\n  return (\n    <div id=\"wrapper\">\n      <SideNavigation/>\n      <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n        <div id=\"content\">\n          <TopBar auth={auth}/>\n          <HashRouter>\n            <Switch>\n              <Route path=\"/schemes\">\n                <SchemesPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/organisations\">\n                <OrganisationsPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/groups\">\n                <GroupsPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/members\">\n                <MembersPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/journeys\">\n                <JourneysPage api={auth.getAuthenticatedApi()} />\n              </Route>\n              <Route path=\"/\">\n                <DashboardPage api={auth.getAuthenticatedApi()} />\n              </Route>\n            </Switch>\n          </HashRouter>\n        </div>\n        <Footer/>\n      </div>\n    </div>\n  );\n};\n\ninterface AuthenticatedPageProps {\n  auth: Authentication;\n}\n","import { Redirect, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nexport const PrivateRoute = ({ children, auth, ...rest }: any) => {\n  return (\n    <Route\n      {...rest}\n      render={ ({ location }) =>\n        auth.isAuthenticated ? children : <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n      }\n    />\n  );\n};\n","import { useCookies } from \"react-cookie\";\nimport Axios, { AxiosInstance } from \"axios\";\n\nexport class Authentication {\n  private readonly cookie: AuthenticationCookie;\n  private readonly setCookie: (name: string, value: any) => void;\n  private readonly removeCookie: (name: string) => void;\n  private readonly authenticatedApi: AxiosInstance;\n\n  constructor(\n    private readonly api: AxiosInstance\n  ) {\n    const [cookie, setCookie, removeCookie] = useCookies([\"auth\"]);\n\n    this.cookie = cookie.auth;\n    this.setCookie = setCookie;\n    this.removeCookie = removeCookie;\n    this.authenticatedApi = Axios.create({\n      baseURL: api.defaults.baseURL,\n      headers: {\n        authorization: \"Basic \" + (this.cookie && this.cookie.token)\n      }\n    });\n  }\n\n  public get isAuthenticated(): boolean {\n    return this.cookie && this.cookie.token !== undefined;\n  }\n\n  public async login(username: string, password: string): Promise<void> {\n    try {\n      const response = await this.api.post(\"/login\", { username, password });\n\n      this.setCookie(\"auth\", response.data.data);\n    }\n    catch (e) {\n      console.error(e);\n    }\n  }\n\n  public logout(): void {\n    this.removeCookie(\"auth\");\n  }\n\n  public getAuthenticatedApi() {\n    return this.authenticatedApi;\n  }\n\n  public getName() {\n    return this.cookie.name;\n  }\n}\n\ninterface AuthenticationCookie {\n  token?: string\n  name?: string\n}\n","import { GroupJsonView, OrganisationJsonView, SchemeJsonView } from \"eco-rewards-hub\";\nimport React, { useState } from \"react\";\nimport \"./GroupSelect.css\";\n\nexport const GroupSelect = ({ groups, links, group, setGroup }: GroupSelectProps) => {\n  const [scheme, setScheme] = useState(\"\");\n  const [organisation, setOrganisation] = useState(\"\");\n\n  const schemes: SchemeJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/scheme/\") && k !== \"/scheme/1\")\n    .map(k => links[k]);\n\n  const organisations: OrganisationJsonView[] = Object\n    .keys(links)\n    .filter(k => k.startsWith(\"/organisation/\") && links[k].scheme === scheme)\n    .map(k => links[k]);\n\n  const selectableGroups: GroupJsonView[] = groups.filter(g => g.organisation === organisation);\n\n  return (\n    <div className=\"group-select\">\n      <select className=\"custom-select form-control form-control-sm\" name=\"scheme\" onChange={e => setScheme(e.target.value)}>\n        <option value=\"\">&lt;Select scheme&gt;</option>\n        { schemes.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}\n      </select>\n      <select disabled={organisations.length === 0} className=\"custom-select form-control form-control-sm\" name=\"organisation\" onChange={e => setOrganisation(e.target.value)}>\n        <option value=\"\">&lt;Select organisation&gt;</option>\n        { organisations.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\n      </select>\n      <select disabled={selectableGroups.length === 0} className=\"custom-select form-control form-control-sm\" name=\"group\" onChange={e => setGroup(e.target.value)}>\n        <option value=\"\">&lt;Select group&gt;</option>\n        { selectableGroups.map(g => <option key={g.id} value={g.id}>{g.name}</option>)}\n      </select>\n    </div>\n  );\n};\n\nexport interface GroupSelectProps {\n  groups: GroupJsonView[],\n  links: Record<string, any>,\n  group: string,\n  setGroup: (group: string) => any\n}\n","import React, { FormEvent, useEffect, useState } from \"react\";\nimport { AxiosInstance } from \"axios\";\nimport { TransportModeList } from \"../TransportModeList/TransportModeList\";\nimport \"./RegistrationPage.css\";\nimport { GroupSelect } from \"./GroupSelect/GroupSelect\";\n\nexport const RegistrationPage = ({ api }: RegistrationPageProps) => {\n  const [success, setSuccess] = useState(false);\n  const [registrationError, setRegistrationError] = useState(\"\");\n  const [smartcard, setSmartcard] = useState(\"\");\n  const [defaultTransportMode, setDefaultTransportMode] = useState(\"\");\n  const [defaultDistance, setDefaultDistance] = useState(1.0);\n  const [group, setGroup] = useState(\"\");\n  const [groups, setGroups] = useState([]);\n  const [links, setLinks] = useState({});\n\n  useEffect(() => {\n    async function fetchGroups() {\n      const response = await api.get(\"/groups\");\n\n      setGroups(response.data.data);\n      setLinks(response.data.links);\n    }\n\n    if (groups.length === 0) {\n      fetchGroups();\n    }\n  }, [api, groups]);\n\n  const register = async (e: FormEvent) => {\n    e.preventDefault();\n\n    try {\n      await api.post(\"/member\", { smartcard, defaultTransportMode, defaultDistance, group });\n      setSuccess(true);\n    }\n    catch (err) {\n      setRegistrationError(\"Unable to register, please try again.\");\n    }\n  };\n\n  const smartcardNumberValid = smartcard.length === 16 || smartcard.length === 18;\n  const canSubmit = smartcardNumberValid && defaultTransportMode !== \"\" && defaultDistance > 0 && group !== \"\";\n  const form = () => {\n    return (\n      <>\n        <div className=\"text-center\">\n          <h1 className=\"h4 text-gray-900 mb-4\">Register</h1>\n        </div>\n        <form className=\"user\">\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputSmartcard\"\n                   pattern=\"^[0-9]*$\"\n                   minLength={16}\n                   maxLength={18}\n                   aria-describedby=\"smartcardHelp\" placeholder=\"Enter Smartcard number\" required\n                   onChange={e => setSmartcard(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <TransportModeList defaultTransportMode={defaultTransportMode} setDefaultTransportMode={setDefaultTransportMode} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"text\" className=\"form-control form-control-user\" id=\"exampleInputDistance\"\n                   aria-describedby=\"distanceHelp\" placeholder=\"Enter normal distance in miles\" required\n                   onChange={e => setDefaultDistance(+e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <GroupSelect group={group} setGroup={setGroup} groups={groups} links={links} />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-user btn-block\" onClick={register} disabled={!canSubmit}>\n            Register\n          </button>\n        </form>\n        { registrationError && (<hr />) }\n        {registrationError}\n      </>\n    );\n  };\n\n  const successPage = () => {\n    return (\n      <>\n        <div className=\"text-center\">\n          <h1 className=\"h4 text-gray-900 mb-4\">SUCCESS - Your card has been registered!</h1>\n        </div>\n        <p>\n          Thank you.\n        </p>\n        <p>\n          Using your smartcard to report green travel choices will now add points and carbon savings to your account. For more information and to access Eco Rewards, go to <a href=\"ecorewards.org.uk and\">ecorewards.org.uk</a> create your personal account.\n        </p>\n        <br/>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-xl-10 col-lg-12 col-md-9\">\n          <div className=\"card o-hidden border-0 shadow-lg my-5\">\n            <div className=\"card-body p-0\">\n              <div className=\"row\">\n                <div className=\"col-lg-6 d-none d-lg-block bg-login-image\"></div>\n                <div className=\"col-lg-6\">\n                  <div className=\"p-5\">\n                    { success ? successPage() : form() }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface RegistrationPageProps {\n  api: AxiosInstance\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"startbootstrap-sb-admin-2/css/sb-admin-2.min.css\"\nimport \"startbootstrap-sb-admin-2/vendor/fontawesome-free/css/all.min.css\"\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { LoginPage } from \"./LoginPage/LoginPage\";\nimport { AuthenticatedPage } from './AuthenticatedPage/AuthenticatedPage';\nimport { PrivateRoute } from './PrivateRoute/PrivateRoute';\nimport { Authentication } from \"./Authentication\";\nimport Axios from 'axios';\nimport { RegistrationPage } from \"./RegistrationPage/RegistrationPage\";\n\nexport const App = () => {\n  const api = Axios.create({ baseURL: \"https://api.ecorewards.co.uk\" });\n  const auth = new Authentication(api);\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage auth={auth}/>\n        </Route>\n        <Route path=\"/register\">\n          <RegistrationPage api={api}/>\n        </Route>\n        <PrivateRoute auth={auth} path=\"/\">\n          <AuthenticatedPage auth={auth}/>\n        </PrivateRoute>\n      </Switch>\n    </HashRouter>\n  );\n};\n\n"],"sourceRoot":""}